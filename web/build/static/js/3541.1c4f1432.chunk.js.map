{"version":3,"file":"static/js/3541.1c4f1432.chunk.js","mappings":"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","sources":["_helpers/formatter-currency.ts","_helpers/helpers.ts","components/Address/index.tsx","components/PlaceholderCard/index.tsx","components/Switch/AntSwitch.tsx","components/Switch/WordSwitch.tsx","components/Delayed/index.tsx","pages/PreflightCheck.tsx","assets/images/moultire-logo.svg","assets/images/overclk-logo.svg","recoil/api/providers.ts","components/Bid/index.tsx","pages/SelectProvider.tsx"],"sourcesContent":["export const formatCurrency = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n\n  // These options are needed to round to whole numbers if that's what you want.\n  //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n  maximumFractionDigits: 2, // (causes 2500.99 to be printed as $2,501)\n});\n","//const stableStringify = require(\"json-stable-stringify\");\n\nimport { cloneDeep, find, toArray } from 'lodash';\nimport { SDLSpec } from '../components/SdlConfiguration/settings';\n\nconst specSuffixes = {\n  Ki: 1024,\n  Mi: 1024 * 1024,\n  Gi: 1024 * 1024 * 1024,\n  Ti: 1024 * 1024 * 1024 * 1024,\n  Pi: 1024 * 1024 * 1024 * 1024 * 1024,\n  Ei: 1024 * 1024 * 1024 * 1024 * 1024 * 1024,\n  K: 1000,\n  M: 1000 * 1000,\n  G: 1000 * 1000 * 1000,\n  T: 1000 * 1000 * 1000 * 1000,\n  P: 1000 * 1000 * 1000 * 1000 * 1000,\n  E: 1000 * 1000 * 1000 * 1000 * 1000 * 1000,\n  Kb: 1000,\n  Mb: 1000 * 1000,\n  Gb: 1000 * 1000 * 1000,\n  Tb: 1000 * 1000 * 1000 * 1000,\n  Pb: 1000 * 1000 * 1000 * 1000 * 1000,\n  Eb: 1000 * 1000 * 1000 * 1000 * 1000 * 1000,\n};\n\nexport function ParseServiceProtocol(input: string) {\n  let result;\n\n  // This is not a case sensitive parse, so make all input\n  // uppercase\n  if (input) {\n    input = input.toUpperCase();\n  }\n\n  switch (input) {\n    case 'TCP':\n    case '':\n    case undefined: // The empty string (no input) implies TCP\n      result = 'TCP';\n      break;\n    case 'UDP':\n      result = 'UDP';\n      break;\n    default:\n      throw new Error('ErrUnsupportedServiceProtocol');\n  }\n\n  return result;\n}\n\nexport function parseSizeStr(str: any) {\n  try {\n    const suffix = (Object.keys(specSuffixes) as Array<keyof typeof specSuffixes>).find((s) =>\n      str.toString().toLowerCase().endsWith(s.toLowerCase())\n    );\n\n    if (suffix) {\n      const suffixPos = str.length - suffix.length;\n      const numberStr = str.substring(0, suffixPos);\n\n      return (parseFloat(numberStr) * specSuffixes[suffix]).toString();\n    } else {\n      return parseFloat(str);\n    }\n  } catch (err) {\n    console.error(err);\n    throw new Error('Error while parsing size: ' + str);\n  }\n}\n\nexport function shouldBeIngress(expose: any) {\n  return expose.proto === 'TCP' && expose.global && 80 === exposeExternalPort(expose);\n}\n\nfunction exposeExternalPort(expose: any) {\n  if (expose.externalPort === 0) {\n    return expose.port;\n  }\n\n  return expose.externalPort;\n}\n\n/**\n * We need to make storage property of SDL as array to be able to manipulate with ephemeral and persistent storage\n * Here we clone whole SDL, transform storage and then return new SDL\n * @param sdl = {}\n * @return transformed SDL\n */\nexport const transformSdl = (sdl: SDLSpec) => {\n  const transformedSdl = cloneDeep(sdl);\n  const profiles = toArray(sdl.deployment)\n    .map((x: any) => find(x, 'profile'))\n    .map((t: any) => t.profile);\n  profiles.map((profile: any) => {\n    const isStorageArray = Array.isArray(\n      transformedSdl.profiles.compute[profile].resources.storage\n    );\n    if (!isStorageArray) {\n      // There's no better way than mutating it here directly 🤷\n      transformedSdl.profiles.compute[profile].resources.storage = [\n        transformedSdl.profiles.compute[profile].resources.storage,\n      ];\n      return true;\n    }\n    return true;\n  });\n  return transformedSdl;\n};\n\nexport const wait = async (time = 3000) => {\n  return new Promise<void>((res, rej) => {\n    setTimeout(() => {\n      res();\n    }, time);\n  });\n};\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nimport { Snackbar } from '@mui/material';\nimport { Icon } from '../Icons';\n\nexport interface AddressProps {\n  address: string | undefined;\n}\n\nexport const Address: React.FC<AddressProps> = (props) => {\n  const { address } = props;\n  const [truncatedAddress, setTruncatedAddress] = React.useState('');\n  const [open, setOpen] = React.useState(false);\n  const [message, setMessage] = React.useState('');\n\n  React.useEffect(() => {\n    if (typeof address !== 'string') {\n      return;\n    }\n\n    let str = '';\n    if (address.includes('akash')) {\n      str = address.slice(5, address.length + 1);\n    } else {\n      str = address;\n    }\n    const front = str.slice(0, 4);\n    const back = str.slice(str.length - 4);\n    setTruncatedAddress(`${front}...${back}`);\n  }, [address]);\n\n  const handleClick = (fullAddress: string) => {\n    navigator.clipboard.writeText(fullAddress);\n    setMessage('Copied to clipboard!');\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  if (typeof address !== 'string') {\n    return <></>;\n  }\n\n  return (\n    <div>\n      <button className=\"pr-2\">\n        <FileCopyIcon\n          onClick={() => handleClick(address)}\n          style={{\n            color: '#C9CACD',\n            fontSize: 16,\n          }}\n        />\n      </button>\n      {address.includes('akash') ? <span className=\"text-[#adadad]\">akash</span> : null}\n      {truncatedAddress}\n      <Snackbar\n        open={open}\n        autoHideDuration={2500}\n        onClose={handleClose}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n      >\n        <SnackbarCard>\n          <Icon type=\"success\" />\n          <SnackbarCardText>{message}</SnackbarCardText>\n          <div className=\"grow\">{/* spacer */}</div>\n          <button className=\"pr-2\" onClick={handleClose}>\n            <Icon type=\"close\" />\n          </button>\n        </SnackbarCard>\n      </Snackbar>\n    </div>\n  );\n};\n\nconst SnackbarCard = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: 384px;\n  height: 78px;\n  padding: 16px;\n  gap: 16px;\n  background: #ffffff;\n  box-shadow: 0px 10px 15px -3px rgba(0, 0, 0, 0.1), 0px 4px 6px -2px rgba(0, 0, 0, 0.05);\n  border-radius: 8px;\n  border: 1px solid gainsboro;\n`;\n\nconst SnackbarCardText = styled.div`\n  font-family: 'Satoshi-Regular';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 20px;\n  color: #111827;\n`;\n","import { Card, CardContent, Stack, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport * as React from 'react';\nimport { Icon, IconType } from '../Icons';\n\nexport interface PlaceholderCardProps {\n  icon: IconType;\n  title: string;\n  children: React.ReactNode;\n}\n\nexport const PlaceholderCard: React.FC<PlaceholderCardProps> = ({ icon, title, children }) => {\n  return (\n    <Card>\n      <CardContent>\n        <Stack alignItems=\"center\" justifyContent=\"center\" minHeight=\"24rem\">\n          <Box padding=\"1rem\">\n            <Icon type={icon} />\n          </Box>\n          <Typography variant=\"h3\" component=\"h3\">\n            {title}\n          </Typography>\n          <Box textAlign=\"center\">{children}</Box>\n        </Stack>\n      </CardContent>\n    </Card>\n  );\n};\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Switch } from '@mui/material';\n\nexport const AntSwitch: React.FC<any> = styled(Switch)(({ theme }) => ({\n  width: 28,\n  height: 16,\n  padding: 0,\n  display: 'flex',\n  '&:active': {\n    '& .MuiSwitch-thumb': {\n      width: 15,\n    },\n    '& .MuiSwitch-switchBase.Mui-checked': {\n      transform: 'translateX(9px)',\n    },\n  },\n  '& .MuiSwitch-switchBase': {\n    padding: 2,\n    '&.Mui-checked': {\n      transform: 'translateX(12px)',\n      color: '#fff',\n      '& + .MuiSwitch-track': {\n        opacity: 1,\n        backgroundColor: theme.palette.mode === 'dark' ? '#177ddc' : '#FA5757',\n      },\n    },\n  },\n  '& .MuiSwitch-thumb': {\n    boxShadow: '0 2px 4px 0 rgb(0 35 11 / 20%)',\n    width: 12,\n    height: 12,\n    borderRadius: 6,\n    transition: theme.transitions.create(['width'], {\n      duration: 200,\n    }),\n  },\n  '& .MuiSwitch-track': {\n    borderRadius: 16 / 2,\n    opacity: 1,\n    backgroundColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,.35)' : 'rgba(0,0,0,.25)',\n    boxSizing: 'border-box',\n  },\n}));\n","import styled from '@emotion/styled/macro';\n\ntype WordSwitchProps = {\n  on: string;\n  off: string;\n  checked: boolean;\n  onChange: React.ChangeEventHandler<HTMLInputElement> | undefined;\n};\n\nexport const WordSwitch = ({\n  on = 'All',\n  off = 'Only Audited',\n  checked = false,\n  onChange,\n}: WordSwitchProps) => {\n  return (\n    <CheckBoxWrapper>\n      <CheckBoxLabelWrapper>\n        <CheckBox id=\"checkbox\" type=\"checkbox\" checked={checked} onChange={onChange} />\n        <CheckBoxLabel htmlFor=\"checkbox\" data-on={on} data-off={off} />\n      </CheckBoxLabelWrapper>\n    </CheckBoxWrapper>\n  );\n};\n\nconst CheckBoxWrapper = styled.div`\n  position: relative;\n`;\n\nconst CheckBoxLabel = styled.label`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 42px;\n  height: 26px;\n  background: rgba(244, 245, 248, 0.4);\n  cursor: pointer;\n\n  font-family: 'Satoshi-Regular', serif;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 20px;\n\n  &:before {\n    content: attr(data-on);\n    position: absolute;\n    top: 5px;\n    right: 20px;\n  }\n\n  &:after {\n    content: attr(data-off);\n    width: 40px;\n    height: 25px;\n    padding: 3px;\n    background: #fff1f2;\n    color: #f43f5e;\n    border-radius: 6px;\n    position: absolute;\n    left: 2px;\n    top: 2px;\n    text-align: center;\n    transition: all 0.3s ease;\n    box-shadow: 0 0 6px -2px #f43f5e;\n  }\n`;\nconst CheckBox = styled.input`\n  cursor: pointer;\n  width: 50px;\n  height: 25px;\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  z-index: 1;\n  margin: 0;\n\n  &:checked + ${CheckBoxLabel} {\n    background: rgba(244, 245, 248, 0.4);\n    border: 1px solid #d1d5db;\n    box-shadow: inset 0 2px 2px rgba(0, 0, 0, 0.1);\n    border-radius: 6px;\n\n    &:before {\n      content: attr(data-off);\n      right: auto;\n      left: 20px;\n      width: 40px;\n    }\n\n    &:after {\n      content: attr(data-on);\n      left: 46px;\n      width: 100px;\n      background: #fff1f2;\n    }\n  }\n`;\n\nconst CheckBoxLabelWrapper = styled.label`\n  > ${CheckBoxLabel} {\n    margin: 0;\n    width: 150px;\n    height: 30px;\n    background: rgba(244, 245, 248, 0.4);\n    border: 1px solid #d1d5db;\n    box-shadow: inset 0 2px 2px rgba(0, 0, 0, 0.1);\n    border-radius: 6px;\n    overflow: hidden;\n    position: relative;\n    display: block;\n  }\n`;\n","import React from 'react';\n\ninterface DelayedProps {\n  children: React.ReactNode;\n  delayTime?: number;\n}\n\nconst Delayed = ({ children, delayTime = 1000 }: DelayedProps) => {\n  const [isShown, setIsShown] = React.useState(false);\n\n  React.useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsShown(true);\n    }, delayTime);\n    return () => clearTimeout(timer);\n  }, [delayTime]);\n\n  return isShown ? <>{children}</> : null;\n};\n\nexport default Delayed;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { Box, Button, Card, Stack, Tooltip, CircularProgress } from '@mui/material';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { useFormikContext } from 'formik';\nimport { activeCertificate, deploymentSdl, keplrState } from '../recoil/atoms';\nimport { getAccountBalance } from '../recoil/api/bank';\nimport { Icon } from '../components/Icons';\nimport Delayed from '../components/Delayed';\nimport { Text, Title } from '../components/Text';\nimport { uaktToAKT } from '../_helpers/lease-calculations';\nimport { useWallet } from '../hooks/useWallet';\nimport { ManifestVersion } from '../_helpers/deployments-utils';\nimport { SDLSpec } from '../components/SdlConfiguration/settings';\nimport { queryCertificates } from '../api/queries';\nimport { useMutation, useQuery } from 'react-query';\nimport { Certificate_State } from '@akashnetwork/akashjs/build/protobuf/akash/cert/v1beta2/cert';\nimport { Input, Label } from '../components/SdlConfiguration/styling';\nimport { AntSwitch } from '../components/Switch/AntSwitch';\nimport { v2Sdl } from '@akashnetwork/akashjs/build/sdl/types';\nimport { getRpcNode } from '../hooks/useRpcNode';\nimport { createCertificate } from '../api/mutations';\nimport logging from '../logging';\nimport { loadActiveCertificate } from '../api/rpc/beta3/certificates';\nimport { WalletDialog } from '../components/WalletDialog';\nimport { SwapDialog } from '../components/SwapDialog';\n\nexport const PreflightCheck: React.FC<Record<string, never>> = () => {\n  const [keplr] = useRecoilState(keplrState);\n  const [balance, setBalance] = React.useState(0);\n  const { submitForm, values, setFieldValue } = useFormikContext<{\n    depositor: string | undefined;\n    sdl: SDLSpec;\n  }>();\n  const [certificate, setCertificate] = useRecoilState(activeCertificate);\n  const { data: accountCertificates, refetch: refetchCertificates } = useQuery(\n    ['certificates', keplr?.accounts[0]?.address],\n    queryCertificates\n  );\n  const wallet = useWallet();\n  const [isValidCert, setIsValidCert] = React.useState(false);\n  const [manifestVersion, setManifestVersion] = React.useState<Uint8Array>();\n  const [showVerifiedCert, setShowVerifiedCert] = React.useState(false);\n  const [useAuthorizedDepositor, setUseAuthorizedDepositor] = React.useState(false);\n  const { networkType } = getRpcNode();\n  //const { mutate: mxCreateCertificate, isLoading } = useMutation(['createCertificate'], createCertificate);\n  const { mutate: mxCreateCertificate, isLoading } = useMutation(createCertificate);\n  const savedSDL = useRecoilValue(deploymentSdl);\n\n  const [openMenu, setOpenMenu] = React.useState(false);\n  const [openSwap, setOpenSwap] = React.useState(false);\n\n  const openSwapDialog = () => {\n    setOpenSwap(true);\n  };\n\n  const closeSwapDialog = () => {\n    setOpenSwap(false);\n  };\n\n  const closeDialog = () => {\n    setOpenMenu(false);\n  };\n\n  const hasKeplr = window.keplr !== undefined;\n  const sdl = values.sdl || savedSDL;\n\n  const handleSwitchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const checked = event.target.checked;\n\n    if (!checked) {\n      setFieldValue('depositor', undefined);\n    }\n\n    setUseAuthorizedDepositor(event.target.checked);\n  };\n\n  const setDepositorAddress = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setFieldValue('depositor', event.target.value);\n  };\n\n  const handleConnectWallet = async () => {\n    if (!wallet.isConnected) { //change this to global wallet\n      //wallet.connect();\n      setOpenMenu(true);\n    }\n  };\n\n  /* Attempts to calculate the version of the manifest as a quick validation check */\n  React.useEffect(() => {\n    const sdlPartial = sdl as unknown;\n    const rpcVersion = networkType === 'testnet'\n      ? 'beta3'\n      : 'beta2';\n\n    try {\n      // we can safely cast this to v2Sdl because any failure will be caught by the catch block\n      ManifestVersion(sdlPartial as v2Sdl, rpcVersion).then(setManifestVersion);\n    } catch (e) {\n      console.warn('Could not compute manifest version: ', e);\n      setManifestVersion(undefined);\n    }\n  }, [sdl]);\n\n  /* Check if the current active certificate is valid */\n  React.useEffect(() => {\n    if (accountCertificates && accountCertificates.certificates) {\n      const certs: any[] = accountCertificates.certificates;\n\n      const activeCert = certs.find((cert: any) => {\n        const pubKey = Buffer.from(\n          Object.values(cert.certificate.pubkey) as any,\n          'base64'\n        ).toString('ascii');\n\n        return certificate.$type === 'TLS Certificate' && certificate.publicKey === pubKey;\n      });\n\n      if (!activeCert) {\n        console.warn('Unable to find certificate: ', certificate);\n      }\n\n      const isValid = !!(\n        activeCert &&\n        activeCert?.certificate?.state === Certificate_State.valid\n      );\n\n      if (!isValid) {\n        console.warn('Certificate is not valid: ', activeCert?.certificate?.state);\n      }\n\n      setIsValidCert(isValid);\n    }\n  }, [certificate, accountCertificates]);\n\n  /* Check if the current active certificate is valid, also? */\n  React.useEffect(() => {\n    if (showVerifiedCert) {\n      setIsValidCert(true);\n    }\n  }, [showVerifiedCert]);\n\n  /* Automatically connect the wallet if keplr is installed */\n  /*React.useEffect(() => {\n    handleConnectWallet();\n  }, []);*/\n\n  /* Check the current balance of the wallet */\n  React.useEffect(() => {\n    //  if (!window.keplr) return;\n    if (keplr.isSignedIn && keplr?.accounts[0]?.address) {\n      const account = values.depositor || keplr.accounts[0].address;\n      getAccountBalance(account).then((result) => {\n        const akt = uaktToAKT(result);\n        setBalance(akt);\n      });\n      setOpenMenu(false);\n    }\n  }, [keplr, values.depositor]);\n\n  /* Action handler for creating a certificate */\n  const handleCreateCertificate = async () => {\n    // the query doesn't take any arguments, this little hack keeps\n    // typescript happy\n    if (!keplr.isSignedIn && !keplr?.accounts[0]?.address) {\n      setOpenMenu(true);\n      return;\n    }\n    mxCreateCertificate((/*{} as any*/ keplr), {\n      onSuccess: async (result: any) => {\n        setCertificate(await loadActiveCertificate(keplr?.accounts[0]?.address));\n        setShowVerifiedCert(true);\n        logging.success('Certificate created successfully');\n\n        refetchCertificates();\n      },\n      onError: (error: any) => {\n        logging.error('Couldn\\'t create certificate: ' + error);\n      }\n    });\n  };\n\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      gap={2}\n      sx={{\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\n        margin: '0 auto',\n        width: '821px',\n      }}\n    >\n      <PreflightCheckWrapper>\n        <div>\n          <Title size={18} className=\"h-12 pb-6\">\n            Checking Essentials\n          </Title>\n          <Delayed>\n            {/* Check Keplr & Login */}\n            <Stack sx={{ width: '100%' }} spacing=\"1rem\">\n              {!hasKeplr && (\n                <PreflightCheckItemContainer>\n                  <div className=\"flex mb-2\">\n                    <Icon type=\"alert\" />\n                    <Title size={14} className=\"pl-2\">\n                      You will need to install the Keplr wallet extension for Chrome.\n                    </Title>\n                    <div className=\"grow\">{/* spacer - do not remove */}</div>\n                    <a\n                      href=\"https://chrome.google.com/webstore/detail/keplr/dmkamcknogkgcdfhhbddcghachkejeap\"\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      <PreflightActionButton>Get Keplr</PreflightActionButton>\n                    </a>\n                    <Tooltip title=\"Sign in to your Keplr wallet\" placement=\"top\">\n                      <div className=\"ml-2\">\n                        <Icon type=\"infoGray\" />\n                      </div>\n                    </Tooltip>\n                  </div>\n                  <Text size={14}>In order to deploy you will need to connect your wallet.</Text>\n                </PreflightCheckItemContainer>\n              )}\n\n              {hasKeplr && !keplr.isSignedIn ? (\n                <PreflightCheckItemContainer>\n                  <div className=\"flex mb-2\">\n                    <Icon type=\"alert\" />\n                    <Title size={14} className=\"pl-2\">\n                      Connect your Wallet\n                    </Title>\n                    <div className=\"grow\">{/* spacer - do not remove */}</div>\n                    <PreflightActionButton onClick={handleConnectWallet}>\n                      Connect Wallet\n                    </PreflightActionButton>\n                    <Tooltip title=\"Sign in to your Keplr wallet\" placement=\"top\">\n                      <div className=\"ml-2\">\n                        <Icon type=\"infoGray\" />\n                      </div>\n                    </Tooltip>\n                  </div>\n                  <Text size={14}>In order to deploy you will need to connect your wallet.</Text>\n                </PreflightCheckItemContainer>\n              ) : null}\n              {hasKeplr && keplr.isSignedIn ? (\n                <PreflightCheckItemContainer>\n                  <div className=\"flex\">\n                    <Icon type=\"checkVerified\" />\n                    <Title size={14} className=\"pl-3\">\n                      Wallet Connected\n                    </Title>\n                    <div className=\"grow\">{/* spacer - do not remove */}</div>\n                  </div>\n                </PreflightCheckItemContainer>\n              ) : null}\n\n              {balance < 5 && (\n                <PreflightCheckItemContainer>\n                  <div className=\"flex mb-2\">\n                    <Icon type=\"alert\" />\n                    <Title size={14} className=\"pl-2\">\n                      Insufficient funds in your wallet\n                    </Title>\n                    <div className=\"grow\">{/* spacer - do not remove */}</div>\n                    {keplr && !keplr.cosmosClient && keplr.isSignedIn && (\n                      <>\n                      <PreflightActionButton onClick={openSwapDialog}>\n                        Fund wallet\n                      </PreflightActionButton>\n                       <div className=\"grow\">{/* spacer - do not remove */}</div>\n                       </>\n                    )}\n\n                    <div className=\"flex gap-2\">\n                      <Label>Use Depositor</Label>\n                      <AntSwitch checked={useAuthorizedDepositor} onChange={handleSwitchChange} />\n                    </div>\n                  </div>\n                  <Text size={14}>\n                    Minimum wallet balance is at least 5 AKT. You can add funds to your wallet or\n                    specify an authorized depositor. Foo\n                  </Text>\n                  {useAuthorizedDepositor ? (\n                    <div className=\"flex items-center gap-2\">\n                      <Label className=\"pt-2\">Depositor Address:</Label>\n                      <Input\n                        value={values.depositor}\n                        className=\"mt-2 grow\"\n                        placeholder=\"Enter AKT address\"\n                        onChange={setDepositorAddress}\n                      />\n                    </div>\n                  ) : null}\n                </PreflightCheckItemContainer>\n              )}\n              {balance >= 5 ? (\n                <PreflightCheckItemContainer>\n                  <div className=\"flex\">\n                    <Icon type=\"checkVerified\" />\n                    <Title size={14} className=\"pl-2\">\n                      Wallet Funds Sufficient\n                    </Title>\n                    <div className=\"grow\">{/* spacer - do not remove */}</div>\n                    <div className=\"flex gap-2\">\n                      <Label>Use Depositor</Label>\n                      <AntSwitch checked={useAuthorizedDepositor} onChange={handleSwitchChange} />\n                    </div>\n                  </div>\n                  {useAuthorizedDepositor ? (\n                    <div className=\"flex items-center gap-2\">\n                      <Label className=\"pt-2\">Depositor Address:</Label>\n                      <Input\n                        value={values.depositor}\n                        className=\"mt-2 grow\"\n                        placeholder=\"Enter AKT address\"\n                        onChange={setDepositorAddress}\n                      />\n                    </div>\n                  ) : null}\n                </PreflightCheckItemContainer>\n              ) : null}\n\n              {manifestVersion === undefined && (\n                <PreflightCheckItemContainer>\n                  <div className=\"flex mb-2\">\n                    <Icon type=\"alert\" />\n                    <Title size={14} className=\"pl-2\">\n                      Invalid SDL\n                    </Title>\n                    <div className=\"grow\">{/* spacer - do not remove */}</div>\n                  </div>\n                  <Text size={14}>\n                    SDL could not be validated. Please double-check and ensure all values are\n                    correct.\n                    {manifestVersion}\n                  </Text>\n                </PreflightCheckItemContainer>\n              )}\n              {manifestVersion !== undefined ? (\n                <PreflightCheckItemContainer>\n                  <div className=\"flex\">\n                    <Icon type=\"checkVerified\" />\n                    <Title size={14} className=\"pl-2\">\n                      SDL is Valid\n                    </Title>\n                    <div className=\"grow\">{/* spacer - do not remove */}</div>\n                  </div>\n                </PreflightCheckItemContainer>\n              ) : null}\n\n              {!isValidCert && (\n                <PreflightCheckItemContainer>\n                  <div className=\"flex mb-2\">\n                    <Icon type=\"alert\" />\n                    <Title size={14} className=\"pl-2\">\n                      {isLoading ? 'Please wait, creating certificate...' : 'Missing Certificate'}\n                    </Title>\n                    <div className=\"grow\">{/* spacer - do not remove */}</div>\n                    <PreflightActionButton onClick={handleCreateCertificate}>\n                      Create Certificate\n                    </PreflightActionButton>\n                    <Tooltip\n                      title=\"Create a valid certificate on the Akash Network.\"\n                      placement=\"top\"\n                    >\n                      <div className=\"ml-2\">\n                        <Icon type=\"infoGray\" />\n                      </div>\n                    </Tooltip>\n                  </div>\n                  <Text size={14}>\n                    {isLoading ? (\n                      <div className=\"flex justify-center\">\n                        {' '}\n                        <CircularProgress />{' '}\n                      </div>\n                    ) : (\n                      'In order to deploy you will need to create a certificate.'\n                    )}\n                  </Text>\n                </PreflightCheckItemContainer>\n              )}\n              {isValidCert ? (\n                <PreflightCheckItemContainer>\n                  <div className=\"flex\">\n                    <Icon type=\"checkVerified\" />\n                    <Title size={14} className=\"pl-2\">\n                      Valid Certificate\n                    </Title>\n                    <div className=\"grow\">{/* spacer - do not remove */}</div>\n                  </div>\n                </PreflightCheckItemContainer>\n              ) : null}\n            </Stack>\n          </Delayed>\n        </div>\n      </PreflightCheckWrapper>\n      <DeploymentAction>\n        <Button variant=\"contained\" onClick={submitForm}>\n          Next\n        </Button>\n      </DeploymentAction>\n      <WalletDialog\n        open={openMenu}\n        close={closeDialog}\n      />\n      <SwapDialog\n        open={openSwap}\n        close={closeSwapDialog}\n      />\n    </Box>\n  );\n};\n\nconst DeploymentAction = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst PreflightCheckWrapper = styled(Card)`\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n  padding: 24px;\n  min-height: 320px;\n`;\n\nconst PreflightCheckItemContainer = styled.div`\n  width: 100%;\n  padding: 16px;\n  background: #ffffff;\n  border: 1px solid #d1d5db;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n`;\n\nconst PreflightActionButton = styled(Button)`\n  color: #374151;\n  background: #ffffff;\n  border: 1px solid #d1d5db;\n  box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.05);\n  border-radius: 6px;\n  font-family: 'Satoshi-Regular';\n  font-style: normal;\n  font-weight: 800;\n  font-size: 12px;\n  padding: 2px 16px;\n  height: 38px;\n  width: 132px;\n  text-transform: none;\n`;\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgMoultireLogo(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 10,\n    height: 13,\n    viewBox: \"0 0 10 13\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.52741 4.70761L4.26032 4.90917C2.68951 5.15905 1.54479 6.5309 1.58021 8.12107V8.12107C1.61927 9.87481 3.07085 11.2658 4.82467 11.2301L5.2635 11.2212C7.2697 11.1804 8.86001 9.51567 8.80906 7.50971L8.63652 0.716394\",\n    stroke: \"#2AC568\",\n    strokeWidth: 2\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMoultireLogo);\nexport default __webpack_public_path__ + \"static/media/moultire-logo.78ee783b09aab2e75ab03ab75f21b9c3.svg\";\nexport { ForwardRef as ReactComponent };","var _circle, _path, _path2, _path3, _path4;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgOverclkLogo(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 12,\n    cy: 12,\n    r: 5,\n    stroke: \"black\",\n    strokeWidth: 2\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 4V10\",\n    stroke: \"#F4F5F8\",\n    strokeWidth: 3\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6 18.3057L10.1787 14\",\n    stroke: \"#F4F5F8\",\n    strokeWidth: 3\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6 17.3057L10.1787 13\",\n    stroke: \"black\",\n    strokeWidth: 2\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13 4L13 10\",\n    stroke: \"black\",\n    strokeWidth: 2\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgOverclkLogo);\nexport default __webpack_public_path__ + \"static/media/overclk-logo.a6d9f74ce93210e3291832578d61c722.svg\";\nexport { ForwardRef as ReactComponent };","import {\n  QueryClientImpl as ProviderClient,\n  QueryProviderRequest,\n  QueryProvidersRequest,\n} from '@akashnetwork/akashjs/build/protobuf/akash/provider/v1beta2/query';\nimport {\n  QueryAuditorAttributesRequest,\n  QueryClientImpl as AuditClient,\n  QueryProviderAttributesRequest,\n  QueryProvidersResponse,\n} from '@akashnetwork/akashjs/build/protobuf/akash/audit/v1beta2/query';\nimport { getRpc } from '@akashnetwork/akashjs/build/rpc';\n\nexport const fetchProvidersList = async (rpcEndpoint: string) => {\n  const rpc = await getRpc(rpcEndpoint);\n  const client = new ProviderClient(rpc);\n\n  return client.Providers(QueryProvidersRequest.fromPartial({}));\n};\n\nexport const fetchProviderInfo = async (\n  filter: {\n    owner: string;\n  },\n  rpcEndpoint: string\n) => {\n  const rpc = await getRpc(rpcEndpoint);\n  const client = new ProviderClient(rpc);\n\n  return client.Provider(QueryProviderRequest.fromPartial(filter));\n};\n\nexport const fetchProviderAttributes = async (\n  filter: {\n    owner: string;\n  },\n  rpcEndpoint: string\n) => {\n  const rpc = await getRpc(rpcEndpoint);\n  const client = new AuditClient(rpc);\n\n  if (filter.owner === undefined) {\n    return;\n  }\n\n  return client\n    .ProviderAttributes(QueryProviderAttributesRequest.fromPartial(filter))\n    .catch((err) => ({} as QueryProvidersResponse)); // if there is no value, return empty set\n};\n\nexport const fetchAuditorAttributes = async (\n  filter: {\n    auditor: string;\n  },\n  rpcEndpoint: string\n) => {\n  const rpc = await getRpc(rpcEndpoint);\n  const client = new AuditClient(rpc);\n\n  if (filter.auditor === undefined) {\n    return;\n  }\n\n  return client\n    .AuditorAttributes(QueryAuditorAttributesRequest.fromPartial(filter))\n    .catch((err) => ({} as QueryProvidersResponse)); // if there is no value, return empty set\n};\n","import React, { Suspense } from 'react';\nimport { Box, Button, Chip, CircularProgress, Tooltip } from '@mui/material';\nimport styled from '@emotion/styled';\nimport { useRecoilValue } from 'recoil';\nimport { aktMarketCap, rpcEndpoint } from '../../recoil/atoms';\nimport { Address } from '../Address';\nimport { formatCurrency } from '../../_helpers/formatter-currency';\nimport { getAvgAktCostPerMonth } from '../../_helpers/lease-calculations';\nimport { useNavigate } from 'react-router-dom';\nimport moultireLogo from '../../assets/images/moultire-logo.svg';\nimport ovrclkLogo from '../../assets/images/overclk-logo.svg';\nimport { Hashicon } from '@emeraldpay/hashicon-react';\nimport { fetchProviderAttributes, fetchProviderInfo } from '../../recoil/api/providers';\nimport { useQuery } from 'react-query';\nimport { Bid as TBid } from '@akashnetwork/akashjs/build/protobuf/akash/market/v1beta2/bid';\nimport { getRpcNode } from '../../hooks/useRpcNode';\nimport { queryProviderInfo } from '../../api/queries';\n\nconst auditors = {\n  akash18qa2a2ltfyvkyj0ggj3hkvuj6twzyumuaru9s4: {\n    name: 'Moultrie Audits Bronze',\n    website: 'https://www.moultrieaudits.com/',\n    logo: () => <img src={moultireLogo} alt=\"Moultire\" />,\n  },\n  akash17fqxak4kprh2rlatjlv9w04s9ugl7mn32ckut3: {\n    name: 'Moultrie Audits Silver',\n    website: 'https://www.moultrieaudits.com/',\n    logo: () => <img src={moultireLogo} alt=\"Moultire\" />,\n  },\n  akash1365yvmc4s7awdyj3n2sav7xfx76adc6dnmlx63: {\n    name: 'Overclock Labs',\n    website: 'https://akash.network',\n    logo: () => <img src={ovrclkLogo} alt=\"Overlck\" />,\n  },\n};\n\ntype BidAuditTagProps = {\n  bid: TBid;\n};\n\nconst BidAuditTag: React.FC<BidAuditTagProps> = ({ bid }) => {\n  const { rpcNode } = getRpcNode();\n\n  const { data: attributes } = useQuery(['providerAttributes', bid.bidId?.provider], () =>\n    fetchProviderAttributes({ owner: bid.bidId?.provider || '' }, rpcNode)\n  );\n\n  const isAudited = (attributes?.providers?.length || 0) > 0;\n\n  return (\n    <>\n      {isAudited && (\n        <Chip\n          variant=\"filled\"\n          label=\"Audited\"\n          color=\"success\"\n          size=\"small\"\n          sx={{ marginLeft: 'auto', marginRight: '10px', padding: '2px' }}\n        />\n      )}\n    </>\n  );\n};\n\ntype BidAuditBadgesProps = {\n  bid: TBid;\n};\n\nconst isValidAuditor = (id: string): id is keyof typeof auditors => {\n  return Object.prototype.hasOwnProperty.call(auditors, id);\n};\n\nconst BidAuditBadges: React.FC<BidAuditBadgesProps> = ({ bid }) => {\n  const { rpcNode } = getRpcNode();\n\n  const { data: attributes } = useQuery(['providerAttributes', bid.bidId?.provider], () =>\n    fetchProviderAttributes({ owner: bid.bidId?.provider || '' }, rpcNode)\n  );\n\n  return (\n    <>\n      {attributes?.providers\n        ?.map((provider) => {\n          if (isValidAuditor(provider.auditor)) {\n            return auditors[provider.auditor];\n          } else return null;\n        })\n        .map((auditor, idx) => {\n          return auditor && <BadgeBox key={`auditor-${idx}`}>{auditor?.logo()}</BadgeBox>;\n        })}\n    </>\n  );\n};\n\ntype BidProps = BidCardProps;\n\nexport const Bid: React.FC<BidProps> = (props) => {\n  return (\n    <Suspense fallback={<></>}>\n      <BidCard {...props} />\n    </Suspense>\n  );\n};\n\nexport interface BidCardProps {\n  bid: TBid;\n  onNextButtonClick: any;\n  bidId: any;\n  onClick: any;\n  isSelectedProvider: boolean;\n  hideIfNotAudited: boolean;\n}\n\nexport const BidCard: React.FC<BidCardProps> = ({ bid, ...props }) => {\n  const { onNextButtonClick, bidId, hideIfNotAudited } = props;\n  const providerId = bid.bidId?.provider || '';\n  const { rpcNode } = getRpcNode();\n\n  const { data: provider } = useQuery(['provider', providerId], queryProviderInfo);\n\n  const { data: attributes } = useQuery(['providerAttributes', bid.bidId?.provider], () =>\n    fetchProviderAttributes({ owner: bid.bidId?.provider || '' }, rpcNode)\n  );\n\n  const akt = useRecoilValue(aktMarketCap);\n  const price = getAvgAktCostPerMonth(Number(bid?.price?.amount)) * (akt?.current_price || 0);\n  const navigate = useNavigate();\n\n  const handleOpen = () => navigate(`/provider/${provider?.provider?.owner}`);\n\n  if (hideIfNotAudited && !attributes?.providers?.length) {\n    console.log('provider not audited', providerId);\n    return <></>;\n  }\n\n  if (!provider?.provider) {\n    console.log('provider not found', providerId);\n    return <></>;\n  }\n\n  console.log('bid', bid);\n\n  return (\n    <BidWrapper onClick={props.onClick} checked={props.isSelectedProvider}>\n      <BidHeader>\n        <Suspense fallback={<CircularProgress />}>\n          <BidAuditTag bid={bid} />\n        </Suspense>\n      </BidHeader>\n      <HashNameAndHost>\n        <Hashicon value={provider?.provider?.owner} size={40} />\n        <Tooltip title={provider?.provider?.hostUri} placement=\"top\" arrow>\n          <HashName>{formatProviderName(provider?.provider?.hostUri)}</HashName>\n        </Tooltip>\n      </HashNameAndHost>\n\n      <BidCost>\n        Cost estimation:\n        <BidValue>{`~${formatCurrency.format(price)}/month`}</BidValue>\n      </BidCost>\n\n      <BidDetail>\n        <BidLabel>Address:</BidLabel>\n        <Address address={provider?.provider?.owner} />\n      </BidDetail>\n      <BidDetail>\n        <BidLabel>Audited By:</BidLabel>\n        <Suspense fallback={<CircularProgress />}>\n          <BidAuditBadges bid={bid} />\n        </Suspense>\n      </BidDetail>\n\n      {/* We will need this when provider return more information about his assets */}\n\n      {/*<BidDetail>*/}\n      {/*  <BidLabel>All-Time Deployments:</BidLabel>*/}\n      {/*</BidDetail>*/}\n\n      {/*<BidDetail>*/}\n      {/*  <BidLabel>Active Deployments:</BidLabel>*/}\n      {/*</BidDetail>*/}\n\n      {props.isSelectedProvider && (\n        <div className=\"flex justify-between pt-6\">\n          <Button\n            style={{ color: 'black', border: '1px solid #D1D5DB' }}\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={handleOpen}\n          >\n            More Info\n          </Button>\n          <Button variant=\"contained\" onClick={() => onNextButtonClick && onNextButtonClick(bidId)}>\n            Submit Deploy Request\n          </Button>\n        </div>\n      )}\n    </BidWrapper>\n  );\n};\n\nconst formatProviderName = (uri: string | undefined) => {\n  if (typeof uri !== 'string') {\n    return '';\n  }\n\n  const parsed = new URL(uri);\n  return parsed.hostname;\n};\n\nconst BidWrapper = styled.div<{ checked?: boolean }>`\n  width: 400px;\n  box-sizing: border-box;\n  padding: 32px;\n  background: #ffffff;\n  border: 1px solid ${(props) => (props.checked ? '#FA5757' : '#B7C1CF')};\n  box-shadow: ${(props) => (props.checked ? '0 16px 16px rgba(58, 69, 98, 0.16)' : 'none')};\n  border-radius: 16px;\n  flex: none;\n  order: 0;\n  flex-grow: 0;\n  cursor: pointer;\n\n  &:hover {\n    border: 1px solid #fa5757;\n  }\n`;\n\nconst BidHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst HashNameAndHost = styled.div`\n  display: flex;\n  align-items: center;\n  column-gap: 20px;\n  padding: 10px 0;\n  border-bottom: 1px solid #e5e7eb;\n`;\n\nconst BidCost = styled.div`\n  padding: 10px 0;\n`;\nconst BidDetail = styled.div`\n  display: flex;\n  border-top: 1px solid #e5e7eb;\n  padding: 12px 0;\n`;\n\nconst BidValue = styled.div`\n  font-family: 'Satoshi-Regular', serif;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 26px;\n  color: #111827;\n`;\n\nconst BadgeBox = styled(Box)`\n  border: 1px solid #ebedf3;\n  border-radius: 4px;\n  height: 24px;\n  width: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst BidLabel = styled.p`\n  margin-right: auto;\n  padding: 0;\n`;\n\nconst HashName = styled.p`\n  font-family: 'Satoshi-Regular', serif;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 24px;\n  color: #111827;\n  margin-bottom: 6px;\n  width: 300px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n","import React, { ChangeEventHandler, useState } from 'react';\nimport { Box, Divider, Stack } from '@mui/material';\nimport { Bid as BidCard } from '../components/Bid';\nimport { queryBidsList } from '../api/queries';\nimport { Bid } from '@akashnetwork/akashjs/build/protobuf/akash/market/v1beta2/bid';\nimport styled from '@emotion/styled';\nimport Loading from '../components/Loading';\nimport { useQuery } from 'react-query';\nimport { WordSwitch } from '../components/Switch/WordSwitch';\nimport { Timer } from '../components/Timer';\nimport { PlaceholderCard } from '../components/PlaceholderCard';\nimport { getRpcNode } from '../hooks/useRpcNode';\n\nexport interface SelectProviderProps {\n  deploymentId: { owner: string; dseq: string };\n  onNextButtonClick?: (bidId: any) => void;\n}\n\nconst Title = styled.h2`\n  display: inline-block;\n  height: 1.75rem;\n`;\n\nconst sortingMethods = {\n  random: {\n    algorithm: (ba: Bid, bb: Bid) => 0,\n  },\n  byPrice: {\n    algorithm: (ba: Bid, bb: Bid) =>\n      ba.price !== undefined && bb.price !== undefined\n        ? parseInt(ba.price.amount) - parseInt(bb.price.amount)\n        : 0,\n  },\n};\n\nconst filterMethods = {\n  none: {\n    algorithm: (bid: any) => true,\n  },\n  byAudit: {\n    algorithm: (bid: any) => bid.auditStatus?.length > 0,\n  },\n};\n\nexport default function SelectProvider({\n  onNextButtonClick,\n  deploymentId,\n}: SelectProviderProps): JSX.Element {\n  const [refreshInterval, setRefreshInterval] = useState(1000);\n  const [bids, setBids] = useState<Bid[]>([]);\n  const { data: bidsResponse } = useQuery(['bids', deploymentId], queryBidsList, {\n    refetchOnWindowFocus: false,\n    keepPreviousData: true,\n    refetchInterval: refreshInterval\n  });\n\n  React.useEffect(() => {\n    const bids = bidsResponse?.bids;\n\n    if (bids && bids.length > 0) {\n      setRefreshInterval(5000);\n      setBids(\n        (bids as unknown as Array<{ bid?: Bid }>)\n          .filter((bid: { bid?: Bid }) => bid.bid !== undefined)\n          .map((bid: { bid?: Bid }) => bid.bid as Bid) // ts has issues with the filter above\n      );\n    }\n  }, [bidsResponse]);\n\n  const [timerExpired, setTimerExpired] = React.useState(false);\n  const [selectedProvider, setSelectedProvider] = React.useState<string>();\n  const [sortMethod] = useState(sortingMethods.byPrice);\n  const [filterMethod, setFilterMethod] = React.useState(filterMethods.none);\n\n  const isSelectedProvider = (providerId: string) =>\n    selectedProvider && providerId === selectedProvider;\n\n  const selectProvider = (providerId: string) => (evt: React.MouseEvent) => {\n    evt.preventDefault();\n    setSelectedProvider(providerId);\n  };\n\n  const toggleFilter: ChangeEventHandler<HTMLInputElement> = (evt) => {\n    const checked = evt.target.checked;\n    setFilterMethod(checked ? filterMethods.byAudit : filterMethods.none);\n  };\n\n  const handleTimerExpire = () => {\n    setTimerExpired(true);\n  };\n\n  return (\n    <Stack className=\"container akt-card\">\n      <Box className=\"flex items-center justify-between mb-2 w-100\">\n        <Title className=\"text-lg font-bold\">Select a Provider</Title>\n        <div className=\"flex items-center gap-2\">\n          {/* <Button\n          style={{\n            height: \"30px\",\n            backgroundColor: \"white\",\n            border: '1px solid #D1D5DB',\n            textTransform: \"capitalize\"\n          }}\n          variant=\"outlined\"\n          color=\"secondary\"\n          startIcon={<CachedIcon sx={{ color: \"#9CA3AF\" }} />}\n          onClick={() => refetch()}\n        >\n          Refresh\n        </Button> */}\n          <WordSwitch\n            on=\"Only Audited\"\n            off=\"All\"\n            checked={filterMethod === filterMethods.byAudit}\n            onChange={toggleFilter}\n          />\n          <Timer startTime={Date.now()} onTimerEnd={handleTimerExpire} message='Bid'/>\n        </div>\n      </Box>\n      <Divider className=\"mt-2 mb-4\" />\n      <Box\n        display=\"flex\"\n        flexDirection=\"row\"\n        alignItems=\"top\"\n        justifyContent=\"center\"\n        flexWrap=\"wrap\"\n        gap={2}\n        marginTop=\"1rem\"\n      >\n        {!timerExpired && (\n          <Stack>\n            <Stack direction=\"row\" flexWrap=\"wrap\" justifyContent=\"center\" gap=\"1rem\">\n              {bids &&\n                bids\n                  .sort(sortMethod.algorithm)\n                  .map((bid: any, i: number) => (\n                    <BidCard\n                      hideIfNotAudited={filterMethod === filterMethods.byAudit}\n                      key={i}\n                      bid={bid}\n                      isSelectedProvider={isSelectedProvider(bid.bidId.provider)}\n                      onClick={selectProvider(bid.bidId.provider)}\n                      onNextButtonClick={onNextButtonClick}\n                      {...bid}\n                    />\n                  ))}\n            </Stack>\n            <Loading />\n          </Stack>\n        )}\n        {timerExpired && (\n          <>\n            <PlaceholderCard title=\"Bids Expired\" icon=\"alert\">\n              <p>\n                All bids for the deployment have expired. Please close this deployment, and create a\n                new one.\n              </p>\n            </PlaceholderCard>\n          </>\n        )}\n      </Box>\n    </Stack>\n  );\n}\n"],"names":["formatCurrency","Intl","NumberFormat","style","currency","maximumFractionDigits","transformSdl","sdl","transformedSdl","cloneDeep","toArray","deployment","map","x","find","t","profile","Array","isArray","profiles","compute","resources","storage","Address","props","address","_React$useState","React","_React$useState2","_slicedToArray","truncatedAddress","setTruncatedAddress","_React$useState3","_React$useState4","open","setOpen","_React$useState5","_React$useState6","message","setMessage","str","front","includes","slice","length","back","concat","handleClose","_jsx","_Fragment","_jsxs","children","className","FileCopyIcon","onClick","fullAddress","navigator","clipboard","writeText","color","fontSize","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","SnackbarCard","Icon","type","SnackbarCardText","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","PlaceholderCard","_ref","icon","title","Card","CardContent","Stack","alignItems","justifyContent","minHeight","Box","padding","Typography","variant","component","textAlign","AntSwitch","Switch","theme","width","height","display","transform","opacity","backgroundColor","palette","mode","boxShadow","borderRadius","transition","transitions","create","duration","boxSizing","WordSwitch","_ref$on","on","_ref$off","off","_ref$checked","checked","onChange","CheckBoxWrapper","CheckBoxLabelWrapper","CheckBox","id","CheckBoxLabel","htmlFor","_styled","target","name","styles","_ref$delayTime","delayTime","isShown","setIsShown","timer","setTimeout","clearTimeout","PreflightCheck","_keplr$accounts$","_useRecoilState","useRecoilState","keplrState","keplr","balance","setBalance","_useFormikContext","useFormikContext","submitForm","values","setFieldValue","_useRecoilState3","activeCertificate","_useRecoilState4","certificate","setCertificate","_useQuery","useQuery","accounts","queryCertificates","accountCertificates","data","refetchCertificates","refetch","wallet","useWallet","isValidCert","setIsValidCert","manifestVersion","setManifestVersion","_React$useState7","_React$useState8","showVerifiedCert","setShowVerifiedCert","_React$useState9","_React$useState10","useAuthorizedDepositor","setUseAuthorizedDepositor","networkType","getRpcNode","_useMutation","useMutation","createCertificate","mxCreateCertificate","mutate","isLoading","savedSDL","useRecoilValue","deploymentSdl","_React$useState11","_React$useState12","openMenu","setOpenMenu","_React$useState13","_React$useState14","openSwap","setOpenSwap","hasKeplr","undefined","window","handleSwitchChange","event","setDepositorAddress","value","handleConnectWallet","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","isConnected","stop","apply","arguments","sdlPartial","rpcVersion","ManifestVersion","then","e","console","warn","certificates","_activeCert$certifica","activeCert","cert","pubKey","Buffer","from","Object","pubkey","toString","$type","publicKey","_activeCert$certifica2","isValid","state","Certificate_State","valid","_keplr$accounts$2","isSignedIn","account","depositor","getAccountBalance","result","akt","uaktToAKT","handleCreateCertificate","_ref2","_callee3","_keplr$accounts$3","_context3","abrupt","onSuccess","_onSuccess","_callee2","_keplr$accounts$4","_context2","t0","loadActiveCertificate","t1","sent","logging","success","_x","onError","error","flexDirection","gap","sx","m","margin","PreflightCheckWrapper","Title","size","Delayed","spacing","PreflightCheckItemContainer","href","rel","PreflightActionButton","Tooltip","placement","Text","cosmosClient","Label","Input","placeholder","CircularProgress","DeploymentAction","Button","WalletDialog","close","SwapDialog","_templateObject3","_templateObject4","fetchProviderAttributes","_ref3","filter","rpcEndpoint","rpc","client","getRpc","AuditClient","owner","ProviderAttributes","QueryProviderAttributesRequest","fromPartial","catch","err","_x4","_x5","auditors","akash18qa2a2ltfyvkyj0ggj3hkvuj6twzyumuaru9s4","website","logo","src","moultireLogo","alt","akash17fqxak4kprh2rlatjlv9w04s9ugl7mn32ckut3","akash1365yvmc4s7awdyj3n2sav7xfx76adc6dnmlx63","ovrclkLogo","BidAuditTag","_bid$bidId","_attributes$providers","bid","rpcNode","attributes","bidId","provider","_bid$bidId2","isAudited","providers","Chip","label","marginLeft","marginRight","BidAuditBadges","_bid$bidId3","_attributes$providers2","_bid$bidId4","auditor","prototype","hasOwnProperty","call","idx","BadgeBox","Bid","Suspense","fallback","BidCard","_objectSpread","_bid$bidId5","_bid$bidId6","_bid$price","_attributes$providers3","_provider$provider2","_provider$provider3","_provider$provider4","_provider$provider5","_objectWithoutProperties","_excluded","onNextButtonClick","hideIfNotAudited","providerId","queryProviderInfo","_bid$bidId7","aktMarketCap","price","getAvgAktCostPerMonth","Number","amount","current_price","navigate","useNavigate","log","BidWrapper","isSelectedProvider","BidHeader","HashNameAndHost","Hashicon","hostUri","arrow","HashName","formatProviderName","BidCost","BidValue","format","BidDetail","BidLabel","border","_provider$provider","uri","URL","hostname","_templateObject5","_templateObject6","_templateObject7","p","_templateObject8","_templateObject9","h2","sortingMethods","random","algorithm","ba","bb","byPrice","parseInt","filterMethods","none","byAudit","_bid$auditStatus","auditStatus","SelectProvider","deploymentId","_useState","useState","_useState2","refreshInterval","setRefreshInterval","_useState3","_useState4","bids","setBids","bidsResponse","queryBidsList","refetchOnWindowFocus","keepPreviousData","refetchInterval","timerExpired","setTimerExpired","selectedProvider","setSelectedProvider","_useState5","sortMethod","filterMethod","setFilterMethod","selectProvider","evt","preventDefault","Timer","startTime","Date","now","onTimerEnd","Divider","flexWrap","marginTop","direction","sort","i","Loading"],"sourceRoot":""}