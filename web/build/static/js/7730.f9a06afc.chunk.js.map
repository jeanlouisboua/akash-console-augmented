{"version":3,"file":"static/js/7730.f9a06afc.chunk.js","mappings":"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","sources":["_helpers/types.ts","pages/CustomApp.tsx"],"sourcesContent":["export function isError(err: unknown): err is Error {\n  return (\n    err !== null && typeof err === 'object' && Object.prototype.hasOwnProperty.call(err, 'message')\n  );\n}\n","import React, { useCallback, useEffect, useState } from 'react';\nimport styled from '@emotion/styled';\nimport { Box, Button } from '@mui/material';\nimport { Formik } from 'formik';\nimport { SdlConfiguration } from '../components/SdlConfiguration/SdlConfiguration';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { deploymentSdl, keplrState } from '../recoil/atoms';\nimport Keplr from '../components/KeplrLogin';\nimport SelectProvider from './SelectProvider';\nimport { transformSdl } from '../_helpers/helpers';\nimport {\n  initialValues,\n  InitialValuesProps,\n  SdlConfigurationType,\n  SDLSpec,\n} from '../components/SdlConfiguration/settings';\nimport { Icon } from '../components/Icons';\nimport { isError } from '../_helpers/types';\nimport { PreflightCheck } from './PreflightCheck';\nimport { createDeployment, createLease, sendManifest } from '../api/mutations';\nimport { useMutation } from 'react-query';\nimport { getRpcNode } from '../hooks/useRpcNode';\nimport logging from '../logging';\n\nconst CustomApp: React.FC = () => {\n  const { networkType } = getRpcNode();\n  const navigate = useNavigate();\n  const keplr = useRecoilValue(keplrState);\n  const [deploymentId, setDeploymentId] = useState<{ owner: string; dseq: string }>();\n  const { intentId, dseq } = useParams();\n  const [sdl, setSdl] = useRecoilState(deploymentSdl);\n  const [cardMessage, setCardMessage] = useState('');\n  const [activeStep, setActiveStep] = useState({ currentCard: 1 });\n\n  const [reviewSdl, showSdlReview] = useState(false);\n  const closeReviewModal = useCallback(() => showSdlReview(false), []);\n  const { state } = useLocation();\n\n  const { mutate: mxCreateDeployment, isLoading: isCreatingDeployment } =\n    useMutation(createDeployment);\n  const { mutate: mxCreateLease, isLoading: isCreatingLease } = useMutation(createLease);\n  const { mutate: mxSendManifest, isLoading: isSendingManifest } = useMutation(sendManifest);\n\n  const progressVisible = isCreatingDeployment || isCreatingLease || isSendingManifest;\n\n  useEffect(() => {\n    if (intentId && !dseq) {\n      setActiveStep({ currentCard: 2 });\n    } else if (dseq) {\n      setDeploymentId({\n        owner: keplr.accounts[0].address,\n        dseq,\n      });\n      setActiveStep({ currentCard: 3 });\n      return;\n    }\n  }, [dseq, intentId, keplr]);\n\n  const handlePreflight = (intentId: string, sdl: SDLSpec | undefined) => {\n    if (sdl) {\n      setSdl(sdl);\n      navigate(`/new-deployment/custom-sdl/${intentId}`, { state: { sdl } });\n    }\n  };\n\n  const acceptBid = async (bidId: any) => {\n    setCardMessage('Creating lease');\n\n    try {\n      mxCreateLease(bidId, {\n        onSuccess: (lease) => {\n          if (lease) {\n            setCardMessage('Sending manifest');\n            mxSendManifest({ address: keplr.accounts[0].address, lease, sdl });\n          } else {\n            setCardMessage('Could not create lease.');\n          }\n        },\n      });\n    } catch (error: unknown) {\n      if (isError(error)) {\n        console.log('CustomApp.tsx' + error.message);\n      }\n\n      setCardMessage('');\n    }\n  };\n\n  return (\n    <Box sx={{ width: '100%', minHeight: '450px', marginBottom: '25px' }}>\n      <Formik\n        enableReinitialize\n        initialValues={{ ...initialValues, sdl: transformSdl(state.sdl) }}\n        onSubmit={async (values, { setSubmitting, setFieldValue }) => {\n          setCardMessage('Creating deployment');\n\n          setCardMessage('Creating deployment');\n          try {\n            if (!values.sdl) {\n              logging.error('No SDL found');\n              return;\n            }\n\n            mxCreateDeployment(\n              {wallet: keplr, sdl: values.sdl },\n              {\n                onSuccess: (result) => {\n                  if (result && result.deploymentId) {\n                    setDeploymentId(result.deploymentId);\n                    setSdl(values.sdl);\n                    navigate(`/configure-deployment/${result.deploymentId.dseq}`);\n\n                    localStorage.setItem(\n                      `${result.deploymentId.dseq}`,\n                      JSON.stringify({\n                        name: values.appName,\n                        sdl: values.sdl,\n                      })\n                    );\n                  }\n                },\n              }\n            );\n          } catch (error) {\n            if (isError(error)) {\n              console.log('CustomApp.tsx' + error.message);\n            }\n            setCardMessage('');\n          }\n        }}\n      >\n        {({ values, submitForm, setFieldValue }) => {\n          return (\n            <>\n              {!progressVisible && activeStep.currentCard === 1 && (\n                <SdlConfiguration\n                  sdl={values.sdl}\n                  reviewSdl={reviewSdl}\n                  closeReviewModal={closeReviewModal}\n                  configurationType={SdlConfigurationType.Create}\n                  progressVisible={progressVisible}\n                  cardMessage={cardMessage}\n                  onSave={(updatedSdl) => setFieldValue('sdl', updatedSdl)}\n                  actionItems={() => (\n                    <DeploymentAction>\n                      <Button variant=\"outlined\" onClick={() => showSdlReview(true)}>\n                        <span className=\"mr-2\">Review SDL</span> <Icon type=\"edit\" />\n                      </Button>\n                      <Button\n                        variant=\"contained\"\n                        onClick={() => handlePreflight('preflight-check', values.sdl)}\n                      >\n                        Create Deployment\n                      </Button>\n                    </DeploymentAction>\n                  )}\n                />\n              )}\n\n              {!progressVisible &&\n                activeStep.currentCard === 2 &&\n                intentId === 'preflight-check' && <PreflightCheck />}\n\n              {!progressVisible && activeStep.currentCard === 3 && deploymentId && (\n                <Keplr>\n                  <SelectProvider\n                    deploymentId={deploymentId}\n                    onNextButtonClick={(bidId: any) => acceptBid(bidId)}\n                  />\n                </Keplr>\n              )}\n            </>\n          );\n        }}\n      </Formik>\n    </Box>\n  );\n};\n\nexport default CustomApp;\n\nconst DeploymentAction = styled.div`\n  display: flex;\n  justify-content: flex-end;\n\n  Button {\n    margin-right: 10px;\n  }\n`;\n"],"names":["isError","err","Object","prototype","hasOwnProperty","call","getRpcNode","networkType","navigate","useNavigate","keplr","useRecoilValue","keplrState","_useState","useState","_useState2","_slicedToArray","deploymentId","setDeploymentId","_useParams","useParams","intentId","dseq","_useRecoilState","useRecoilState","deploymentSdl","_useRecoilState2","sdl","setSdl","_useState3","_useState4","cardMessage","setCardMessage","_useState5","currentCard","_useState6","activeStep","setActiveStep","_useState7","_useState8","reviewSdl","showSdlReview","closeReviewModal","useCallback","state","useLocation","_useMutation","useMutation","createDeployment","mxCreateDeployment","mutate","isCreatingDeployment","isLoading","_useMutation2","createLease","mxCreateLease","isCreatingLease","_useMutation3","sendManifest","mxSendManifest","isSendingManifest","progressVisible","useEffect","owner","accounts","address","acceptBid","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","bidId","wrap","_context","prev","next","onSuccess","lease","error","console","log","message","stop","_x","apply","arguments","_jsx","Box","sx","width","minHeight","marginBottom","children","Formik","enableReinitialize","initialValues","_objectSpread","transformSdl","onSubmit","_ref3","_callee2","values","_ref2","_context2","setSubmitting","setFieldValue","logging","abrupt","wallet","result","concat","localStorage","setItem","JSON","stringify","name","appName","t0","_x2","_x3","_ref4","submitForm","_jsxs","_Fragment","SdlConfiguration","configurationType","SdlConfigurationType","Create","onSave","updatedSdl","actionItems","DeploymentAction","Button","variant","onClick","className","Icon","type","handlePreflight","PreflightCheck","Keplr","SelectProvider","onNextButtonClick","styled","div","_templateObject","_taggedTemplateLiteral"],"sourceRoot":""}