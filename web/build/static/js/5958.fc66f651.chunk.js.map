{"version":3,"file":"static/js/5958.fc66f651.chunk.js","mappings":"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","sources":["components/ErrorMessage/index.tsx","components/SdlConfiguration/Pricing.tsx","assets/images/icon-top.svg","assets/images/icon-down.svg","components/MeasurementControl/InputNumbers.tsx","components/MeasurementControl/index.tsx","components/SdlConfiguration/Cpu.tsx","components/SdlConfiguration/Memory.tsx","components/SdlConfiguration/Storage.tsx","components/SdlConfiguration/Ports.tsx","components/SdlConfiguration/EnvironmentVariable.tsx","components/SdlConfiguration/Image.tsx","components/SdlConfiguration/HttpOptions.tsx","components/SdlConfiguration/SdlConfiguration.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ErrorMessageComponent = styled.span`\n  background-color: rgb(255, 245, 245);\n  color: rgb(120, 27, 0);\n  display: block;\n  padding: 0 10px;\n  white-space: pre-line;\n`;\n","import { Field } from 'formik';\nimport { ErrorMessageComponent } from '../ErrorMessage';\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport { FieldWrapper, Input } from './styling';\n\nconst validatePricing = (value: any) => {\n  let error;\n  if (value <= 0) {\n    error = 'Pricing can\"t be 0, you have to add positive number only';\n  }\n  return error;\n};\n\ntype PricingAmount = {\n  amount: number;\n  denom: string;\n};\n\ntype PricingPlacement = {\n  pricing: Record<string, PricingAmount>;\n};\n\ntype PricingProfile = {\n  placement: Record<string, PricingPlacement>;\n};\n\ntype PricingProps = {\n  profiles: PricingProfile;\n  placement: string;\n  currentProfile: string;\n  disabled: boolean;\n};\n\nexport const Pricing: React.FC<PricingProps> = ({\n  profiles,\n  placement,\n  currentProfile,\n  disabled,\n}) => {\n  return (\n    <Field\n      name={`sdl.profiles.placement.${placement}.pricing.${currentProfile}.amount`}\n      validate={validatePricing}\n      id=\"amount\"\n    >\n      {({ field, meta }: any) => (\n        <React.Fragment>\n          <FieldWrapperAmountCurrency>\n            <FieldAmountCurrency>\n              {profiles?.placement[placement]?.pricing[currentProfile].denom}\n            </FieldAmountCurrency>\n            <InputField\n              error={meta?.error}\n              style={{\n                borderStartStartRadius: 0,\n                borderEndStartRadius: 0,\n              }}\n              type=\"number\"\n              disabled={disabled}\n              {...field}\n            />\n          </FieldWrapperAmountCurrency>\n          {meta?.error && <ErrorMessageComponent>{meta?.error}</ErrorMessageComponent>}\n        </React.Fragment>\n      )}\n    </Field>\n  );\n};\n\nconst FieldWrapperAmountCurrency = styled(FieldWrapper)`\n  display: flex;\n  align-items: center;\n`;\n\nconst FieldAmountCurrency = styled.div`\n  padding: 10px 16px;\n  border: 1px solid #d7d7d7;\n  border-radius: 6px;\n  border-right: none;\n  border-start-end-radius: 0;\n  border-end-end-radius: 0;\n  background: #f9fafb;\n`;\n\nconst InputField = styled(Input)<{ error?: boolean }>`\n  width: 100%;\n\n  &:disabled {\n    background-color: #d7d7d73d;\n    pointer-events: none;\n  }\n`;\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgIconTop(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 6,\n    height: 5,\n    viewBox: \"0 0 6 5\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.61704 4.01042C4.8989 4.31395 5.37344 4.33153 5.67698 4.04968C5.98051 3.76783 5.99809 3.29328 5.71624 2.98974L4.61704 4.01042ZM2.99998 1.16675L3.54957 0.65641C3.40766 0.503585 3.20853 0.416748 2.99998 0.416748C2.79142 0.416748 2.59229 0.503585 2.45038 0.65641L2.99998 1.16675ZM0.283717 2.98974C0.00186563 3.29328 0.0194418 3.76783 0.322975 4.04968C0.626508 4.33153 1.10106 4.31395 1.38291 4.01042L0.283717 2.98974ZM5.71624 2.98974L3.54957 0.65641L2.45038 1.67709L4.61704 4.01042L5.71624 2.98974ZM2.45038 0.65641L0.283717 2.98974L1.38291 4.01042L3.54957 1.67709L2.45038 0.65641Z\",\n    fill: \"#232323\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconTop);\nexport default __webpack_public_path__ + \"static/media/icon-top.0e90a7ccd01898d6b7eb780ee92a3521.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgIconDown(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 6,\n    height: 5,\n    viewBox: \"0 0 6 5\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.71624 1.67709C5.99809 1.37355 5.98051 0.899004 5.67698 0.617153C5.37344 0.335301 4.8989 0.352877 4.61704 0.65641L5.71624 1.67709ZM2.99998 3.50008L2.45038 4.01042C2.59229 4.16324 2.79142 4.25008 2.99998 4.25008C3.20853 4.25008 3.40766 4.16324 3.54957 4.01042L2.99998 3.50008ZM1.38291 0.65641C1.10106 0.352877 0.626508 0.335301 0.322975 0.617153C0.0194418 0.899004 0.00186563 1.37355 0.283717 1.67709L1.38291 0.65641ZM4.61704 0.65641L2.45038 2.98974L3.54957 4.01042L5.71624 1.67709L4.61704 0.65641ZM3.54957 2.98974L1.38291 0.65641L0.283717 1.67709L2.45038 4.01042L3.54957 2.98974Z\",\n    fill: \"#232323\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconDown);\nexport default __webpack_public_path__ + \"static/media/icon-down.e220b6e5cfae13f946b70692bec9a62e.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport styled from '@emotion/styled';\nimport IconTop from '../../assets/images/icon-top.svg';\nimport IconDown from '../../assets/images/icon-down.svg';\n\nconst ButtonUp = ({ onClick }: any) => (\n  <img style={{ height: 8, cursor: 'pointer' }} onClick={onClick} src={IconTop} alt=\"Icon Up\" />\n);\n\nconst ButtonDown = ({ onClick }: any) => (\n  <img style={{ height: 8, cursor: 'pointer' }} onClick={onClick} src={IconDown} alt=\"Icon Down\" />\n);\n\ninterface InputNumberProps {\n  setFieldValue: (name: string, value: string | number) => void;\n  disabled: boolean;\n\n  [key: string]: any;\n}\n\nexport const InputNumber: React.FC<InputNumberProps> = ({ setFieldValue, disabled, ...field }) => {\n  const size = {\n    value:\n      typeof field.value === 'string'\n        ? Number(field.withOutSuffix ? field.value : field.value.slice(0, -2))\n        : parseFloat(field.value),\n    suffix: !field.withOutSuffix && typeof field.value === 'string' && field.value.slice(-2),\n  };\n\n  return (\n    <NumberInputWrapper>\n      <InputWithSuffix>\n        <NumberInput\n          min=\"0\"\n          step=\"0.1\"\n          // disabled\n          type=\"number\"\n          value={size.value}\n          onChange={({ currentTarget }) => {\n            setFieldValue(field.name, currentTarget.value + (size?.suffix || ''));\n          }}\n        />\n        {size?.suffix && <InputSuffix>{size.suffix}</InputSuffix>}\n      </InputWithSuffix>\n      {!disabled && (\n        <NumberButtonWrapper>\n          <InputIconUp\n            onClick={() => {\n              const isNumberAnExponent = field.withPowerOfTwo;\n              const isNumberWithSmallStep = field.smallIncrement;\n              if (isNumberAnExponent) {\n                const exponent = Math.log2(size.value);\n                return setFieldValue(field.name, Math.pow(2, exponent + 1) + (size.suffix || ''));\n              }\n              if (isNumberWithSmallStep && (size.suffix === 'Gi' || field?.withOutSuffix)) {\n                return setFieldValue(\n                  field.name,\n                  +(size.value + 0.1).toFixed(1) + (size.suffix || '')\n                );\n              }\n              setFieldValue(field.name, size.value + 1 + (size.suffix || ''));\n            }}\n          />\n          <InputIconDown\n            onClick={() => {\n              const isNumberAnExponent = field.withPowerOfTwo;\n              const isNumberWithSmallStep = field.smallIncrement;\n              if (isNumberAnExponent) {\n                const exponent = Math.log2(size.value);\n                return setFieldValue(\n                  field.name,\n                  Math.pow(2, exponent - 1 >= 0 ? exponent - 1 : exponent) + (size.suffix || '')\n                );\n              }\n              if (isNumberWithSmallStep && (size.suffix === 'Gi' || field?.withOutSuffix)) {\n                return setFieldValue(\n                  field.name,\n                  +(size.value - 0.1).toFixed(1) + (size.suffix || '')\n                );\n              }\n              setFieldValue(\n                field.name,\n                (size.value - 1 >= 0 ? size.value - 1 : size.value) + (size?.suffix || '')\n              );\n            }}\n          />\n        </NumberButtonWrapper>\n      )}\n    </NumberInputWrapper>\n  );\n};\n\nconst NumberInputWrapper = styled.div`\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  height: 2.5rem;\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-left: auto;\n`;\n\nconst InputWithSuffix = styled.div`\n  display: flex;\n  border-right: 1px solid #d1d5db;\n  padding: 0.5rem;\n`;\nconst InputSuffix = styled.span``;\n\nconst NumberInput = styled.input`\n  appearance: textfield;\n  font-size: 1rem;\n  font-weight: bold;\n  text-align: center;\n  outline: none;\n  box-sizing: content-box;\n  background: none;\n  display: block;\n  min-width: 0;\n  width: 40px;\n\n  &:after {\n    content: 'Gb';\n    position: relative;\n    width: 20px;\n    height: 20px;\n  }\n\n  &::-webkit-inner-spin-button,\n  &::-webkit-outer-spin-button {\n    appearance: none;\n  }\n`;\n\nconst NumberButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  padding: 0 8px;\n  height: 2.5rem;\n`;\n\nconst InputIconUp = styled(ButtonUp)`\n  width: 1rem;\n  height: 1rem;\n`;\n\nconst InputIconDown = styled(ButtonDown)`\n  width: 1rem;\n  height: 1rem;\n`;\n","import { InputNumber } from './InputNumbers';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\ninterface MeasurementControlProps {\n  title: string;\n  subTitle?: string;\n  setFieldValue: (name: string, value: string | number) => void;\n  disabled: boolean;\n  children: Array<React.ReactNode>;\n\n  [key: string]: any;\n}\n\nexport const MeasurementControl: React.FC<MeasurementControlProps> = ({\n  title,\n  subTitle,\n  setFieldValue,\n  disabled,\n  children,\n  ...field\n}) => {\n  return (\n    <MeasurementWrapper disabled={disabled} error={field?.error}>\n      <div className=\"flex flex-col\">\n        <MeasurementTitle>{title}</MeasurementTitle>\n        <MeasurementSubTitle>{subTitle}</MeasurementSubTitle>\n      </div>\n      <InputNumber setFieldValue={setFieldValue} disabled={disabled} {...field} />\n      {children}\n    </MeasurementWrapper>\n  );\n};\n\nconst MeasurementWrapper = styled.div<{ disabled?: boolean; error?: boolean }>`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 17px 25px;\n  gap: 8px;\n\n  width: 100%;\n  height: 74px;\n  background-color: ${(p) => (p.disabled ? '#d7d7d73d' : '#FFFFFF')};\n\n  border: 1px solid ${(props) => (props?.error ? 'red' : '#D1D5DB')};\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\n  border-radius: 8px;\n`;\n\nconst MeasurementTitle = styled.p`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 20px;\n  color: #111827;\n`;\nconst MeasurementSubTitle = styled.p`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 20px;\n  color: #6b7280;\n`;\n","import React from 'react';\nimport { Field } from 'formik';\nimport { MeasurementControl } from '../MeasurementControl';\nimport { ErrorMessageComponent } from '../ErrorMessage';\nimport { FieldWrapper } from './styling';\n\nconst validateCpu = (value: number) => {\n  let error;\n  if (value <= 0) {\n    error = 'CPU can\"t be 0 and lower, you have to add positive number only';\n  }\n  return error;\n};\n\ntype CpuProps = {\n  currentProfile: string;\n  disabled: boolean;\n};\n\nexport const Cpu: React.FC<CpuProps> = ({ currentProfile, disabled }) => {\n  return (\n    <FieldWrapper>\n      <Field\n        name={`sdl.profiles.compute.${currentProfile}.resources.cpu.units`}\n        validate={validateCpu}\n        id=\"cpu\"\n      >\n        {({ field, form, meta }: any) => (\n          <React.Fragment>\n            <MeasurementControl\n              error={meta?.error}\n              title=\"CPU\"\n              subTitle=\"CPU Required\"\n              setFieldValue={form.setFieldValue}\n              withOutSuffix\n              smallIncrement\n              disabled={disabled}\n              {...field}\n            />\n            {meta?.error && <ErrorMessageComponent>{meta?.error}</ErrorMessageComponent>}\n          </React.Fragment>\n        )}\n      </Field>\n    </FieldWrapper>\n  );\n};\n","import { Field } from 'formik';\nimport { MeasurementControl } from '../MeasurementControl';\nimport React from 'react';\nimport { ErrorMessageComponent } from '../ErrorMessage';\nimport { FieldWrapper } from './styling';\n\nconst validateMemory = (value: any) => {\n  let error;\n  if (value.startsWith('0')) {\n    error = 'Memory can\"t be 0, you have to add positive number only';\n  }\n  return error;\n};\n\ntype MemoryProps = {\n  currentProfile: string;\n  disabled: boolean;\n};\n\nexport const Memory: React.FC<MemoryProps> = ({ currentProfile, disabled }) => {\n  return (\n    <FieldWrapper>\n      <Field\n        name={`sdl.profiles.compute.${currentProfile}.resources.memory.size`}\n        id=\"memory\"\n        validate={validateMemory}\n      >\n        {({ field, form, meta }: any) => {\n          return (\n            <React.Fragment>\n              <MeasurementControl\n                error={meta?.error}\n                title=\"Memory\"\n                subTitle=\"Memory Required\"\n                setFieldValue={form.setFieldValue}\n                withPowerOfTwo\n                disabled={disabled}\n                {...field}\n              />\n              {meta?.error && <ErrorMessageComponent>{meta?.error}</ErrorMessageComponent>}\n            </React.Fragment>\n          );\n        }}\n      </Field>\n    </FieldWrapper>\n  );\n};\n","import { Box, FormControl, IconButton, MenuItem, Select, Stack, Tab, Tabs, Tooltip } from '@mui/material';\nimport { Field, FieldArray } from 'formik';\nimport { MeasurementControl } from '../MeasurementControl';\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport { SDLSpec } from './settings';\nimport {\n  AddNewButton,\n  AddNewButtonWrapper,\n  FieldWrapper,\n  Input,\n  SdlSectionWrapper,\n  VariableWrapper,\n  TrashIcon,\n  PlusSign,\n  TableTitle,\n} from './styling';\nimport { randomInt } from 'crypto';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nconst validateStorage = (value: string) => {\n  const size = value.slice(0, -2);\n  const intValue = parseInt(size, 10);\n\n  if (isNaN(intValue) || intValue <= 0) {\n    return 'Storage must be a positive value greater than zero';\n  }\n};\n\nconst validateStorageData = (value: string) => {\n  if (value === '') {\n    return 'This value can\\'t be blank';\n  }\n};\n\ntype StorageProfile = {\n  resources: {\n    storage: Array<{\n      name: string;\n      attributes: string[];\n    }>;\n  };\n};\n\ntype StorageProps = {\n  serviceName: string;\n  profiles: {\n    compute: Record<string, StorageProfile>;\n  };\n  currentProfile: string;\n  disabled?: boolean;\n};\n\nexport const Storage: React.FC<StorageProps> = ({\n  serviceName,\n  profiles,\n  currentProfile,\n  disabled,\n}) => {\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n    setValue(newValue);\n  };\n  // const withPersistentStorage = Array.isArray(profiles.compute[currentProfile]?.resources.storage);\n  return (\n    <SdlSectionWrapper>\n      <StorageType>Storage Type</StorageType>\n      <Tabs\n        variant=\"fullWidth\"\n        value={value}\n        onChange={handleChange}\n        sx={{ marginBottom: '16px', borderBottom: '1px solid #D1D5DB' }}\n      >\n        <Tab sx={{ textTransform: 'none' }} label={'Ephemeral'} {...a11yProps(0)} />\n        <Tab sx={{ textTransform: 'none' }} label={'Persistent'} {...a11yProps(1)} />\n      </Tabs>\n      <TabPanel value={value} index={0}>\n        <FieldArray\n          name={`sdl.profiles.compute.${currentProfile}.resources.storage`}\n          render={(arrayHelpers: any) => {\n            const storages = profiles.compute[currentProfile]?.resources.storage;\n            return (\n              <>\n                {storages?.map(\n                  (storage, index) =>\n                    !storage?.attributes && (\n                      <FieldWrapper\n                        key={`${currentProfile}-ephemeral-${index}`}\n                        style={{\n                          display: 'flex',\n                          columnGap: '10px',\n                          paddingBottom: '10px',\n                        }}\n                      >\n                        <Field\n                          name={`sdl.profiles.compute.${currentProfile}.resources.storage.${index}.size`}\n                          validate={validateStorage}\n                          id=\"disk\"\n                        >\n                          {({ field, form, meta }: any) => (\n                            <>\n                              <MeasurementControl\n                                error={meta?.error}\n                                title=\"Disk\"\n                                subTitle=\"Disk Required\"\n                                setFieldValue={form.setFieldValue}\n                                disabled={disabled}\n                                smallIncrement\n                                {...field}\n                              />\n                            </>\n                          )}\n                        </Field>\n                        {!disabled && (\n                          <Tooltip\n                            title={\n                              storages.length === 1 &&\n                              index === 0 &&\n                              'This is your only storage, you have to have at least one to be able to deploy the SDL'\n                            }\n                          >\n                            <IconButton\n                              sx={{\n                                background: '#FFFFFF',\n                                border: '1px solid #D1D5DB',\n                                boxShadow: '0px 1px 2px rgb(0 0 0 / 5%)',\n                                borderRadius: '6px',\n                                width: '46px',\n                              }}\n                              onClick={() => {\n                                // Remove selected ephemeral storage but only if it is not the only storage\n                                // otherwise inform the user that deploy can't be successful and forbid delete\n                                storages.length !== 1 && arrayHelpers.remove(index);\n                              }}\n                              aria-label=\"Delete storage\"\n                            >\n                              <TrashIcon />\n                            </IconButton>\n                          </Tooltip>\n                        )}\n                      </FieldWrapper>\n                    )\n                )}\n                {!disabled && (\n                  <AddNewButtonWrapper>\n                    <AddNewButton\n                      startIcon={<PlusSign />}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      onClick={() =>\n                        arrayHelpers.insert(\n                          profiles.compute[currentProfile]?.resources.storage?.length + 1 ?? 0,\n                          {\n                            size: '512Mi',\n                          }\n                        )\n                      }\n                    >\n                      Add New Ephemeral Storage\n                    </AddNewButton>\n                  </AddNewButtonWrapper>\n                )}\n              </>\n            );\n          }}\n        />\n      </TabPanel>\n\n      {/* Persistent storage */}\n      <TabPanel value={value} index={1}>\n        <Stack spacing={2} direction=\"row\" marginBottom={1}>\n          <TableTitle width={163}>Name</TableTitle>\n          <TableTitle width={163}>Mount</TableTitle>\n          <TableTitle width={163}>Size</TableTitle>\n          <TableTitle width={'auto'}>Type</TableTitle>\n        </Stack>\n        <FieldArray\n          name={`sdl.profiles.compute.${currentProfile}.resources.storage`}\n          render={(arrayHelpers: any) => (\n            <React.Fragment>\n              {profiles.compute[currentProfile]?.resources.storage?.map((storage, index) => {\n                return (\n                  storage?.attributes && (\n                    <FieldWrapper\n                      key={`${currentProfile}-persistent-${index}`}\n                      style={{\n                        display: 'flex',\n                        columnGap: '10px',\n                        paddingBottom: '10px',\n                      }}\n                    >\n                      <Field\n                        name={`sdl.profiles.compute.${currentProfile}.resources.storage.${index}.name`}\n                        validate={validateStorageData}\n                      >\n                        {({ field, meta }: any) => (\n                          <InputField {...field} disabled={disabled} error={meta?.error} />\n                        )}\n                      </Field>\n                      <Field\n                        name={`sdl.services.${serviceName}.params.storage.${storage.name}.mount`}\n                        validate={validateStorageData}\n                      >\n                        {({ field, meta }: any) => (\n                          <InputField {...field} disabled={disabled} error={meta?.error} />\n                        )}\n                      </Field>\n                      <Field\n                        name={`sdl.profiles.compute.${currentProfile}.resources.storage.${index}.size`}\n                        validate={validateStorageData}\n                      >\n                        {({ field, meta }: any) => (\n                          <InputField {...field} disabled={disabled} error={meta?.error} />\n                        )}\n                      </Field>\n                      <Field\n                        name={`sdl.profiles.compute.${currentProfile}.resources.storage.${index}.attributes.class`}\n                      >\n                        {({ field }: any) => (\n                          <FormControl\n                            fullWidth\n                            style={{\n                              background: 'white',\n                              ...(disabled && {\n                                backgroundColor: '#d7d7d73d',\n                                pointerEvents: 'none',\n                              }),\n                            }}\n                          >\n                            <Select\n                              labelId=\"to-id\"\n                              {...field}\n                              SelectDisplayProps={{\n                                style: {\n                                  padding: '11.5px 14px',\n                                },\n                              }}\n                            >\n                              <MenuItem value=\"beta1\">\n                                <span>HDD</span>\n                              </MenuItem>\n                              <MenuItem value=\"beta2\">\n                                <span>SSD</span>\n                              </MenuItem>\n                              <MenuItem value=\"beta3\">\n                                <span>NVMe</span>\n                              </MenuItem>\n                            </Select>\n                          </FormControl>\n                        )}\n                      </Field>\n                      {!disabled && (\n                        <IconButton\n                          sx={{\n                            background: '#FFFFFF',\n                            border: '1px solid #D1D5DB',\n                            boxShadow: '0px 1px 2px rgb(0 0 0 / 5%)',\n                            borderRadius: '6px',\n                            width: '46px',\n                          }}\n                          onClick={() => {\n                            // Here we have to update parent sdl.services form and manipulate with service data bound to this persistent storage\n                            const sdl = arrayHelpers.form.values.sdl as SDLSpec;\n                            const storageParams = sdl.services[serviceName]?.params?.storage;\n\n                            if (storageParams) {\n                              const storages = Object.keys(storageParams);\n\n                              // Remove the storage from service params\n                              for (const key of Object.keys(storageParams)) {\n                                if (key === storage?.name && storageParams[key]) {\n                                  delete storageParams[key];\n                                  break;\n                                }\n                              }\n\n                              // -1 because we delete key after this loop\n                              if (storages.length - 1 === 0) {\n                                delete sdl.services[serviceName].params;\n                              }\n                            }\n\n                            // Here we update the sdl in Formik state to propagate it down to all children\n                            arrayHelpers.form.setFieldValue('sdl', sdl);\n                            // Remove selected persistent storage\n                            arrayHelpers.remove(index);\n                          }}\n                          aria-label=\"Delete storage\"\n                        >\n                          <TrashIcon />\n                        </IconButton>\n                      )}\n                    </FieldWrapper>\n                  )\n                );\n              })}\n              {!disabled && (\n                <AddNewButtonWrapper>\n                  <AddNewButton\n                    startIcon={<PlusSign />}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    onClick={() => {\n                      const sdl = arrayHelpers.form.values.sdl as SDLSpec;\n\n                      if (sdl.services[serviceName]?.params?.storage === undefined) {\n                        sdl.services[serviceName].params = {\n                          storage: {},\n                        };\n                      }\n\n                      arrayHelpers.insert(\n                        profiles.compute[currentProfile]?.resources.storage?.length + 1 ?? 0,\n                        {\n                          size: '1Gi',\n                          name: '',\n                          attributes: {\n                            persistent: true,\n                            class: 'beta1',\n                          },\n                        }\n                      );\n                    }}\n                  >\n                    Add New Persistent Storage\n                  </AddNewButton>\n                </AddNewButtonWrapper>\n              )}\n            </React.Fragment>\n          )}\n        />\n      </TabPanel>\n    </SdlSectionWrapper>\n  );\n};\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && children}\n    </div>\n  );\n}\n\nfunction a11yProps(index: number) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst InputField = styled(Input) <{ error?: boolean }>`\n  width: 100%;\n\n  &:disabled {\n    background-color: #d7d7d73d;\n    pointer-events: none;\n  }\n`;\n\nconst StorageType = styled.p`\n  font-family: 'Satoshi-Regular', sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 20px;\n  color: #6b7280;\n`;","import React from 'react';\nimport { Field, FieldArray } from 'formik';\nimport styled from '@emotion/styled';\nimport { FormControl, IconButton, MenuItem, Select, Stack } from '@mui/material';\nimport { ErrorMessageComponent } from '../ErrorMessage';\nimport PlusIcon from '../../assets/images/plus-icon.svg';\nimport Trash from '../../assets/images/icon-trash.svg';\nimport {\n  AddNewButton,\n  AddNewButtonWrapper,\n  FieldWrapper,\n  Input,\n  SdlSectionWrapper,\n  TableTitle,\n  VariableWrapper,\n} from './styling';\n\nconst PlusSign = () => <img src={PlusIcon} alt=\"Plus Icon\" />;\nconst TrashIcon = () => <img src={Trash} alt=\"Trash Icon\" />;\n\nconst validatePort = (value: number, field: string) => {\n  let error;\n  if (value <= 0) {\n    error = `${field.toUpperCase()} can\"t be 0, you have to add positive number only`;\n  }\n  return error;\n};\n\ntype Service = {\n  expose: Array<{\n    to: Array<{\n      global: boolean;\n    }>;\n  }>;\n};\n\ntype PortsProps = {\n  serviceName: string;\n  services: Record<string, Service>;\n  updatePage?: boolean;\n};\n\nexport const Ports: React.FC<PortsProps> = ({ serviceName, services, updatePage = false }) => {\n  return (\n    <FieldArray\n      name={`sdl.services.${serviceName}.expose`}\n      render={(arrayHelpers: any) => (\n        <SdlSectionWrapper>\n          <Stack direction=\"row\" columnGap=\"10px\">\n            <TableTitle width={178}>Port</TableTitle>\n            <TableTitle width={178}>As</TableTitle>\n            <TableTitle width={178}>Host</TableTitle>\n            <TableTitle width={'auto'}>Accept</TableTitle>\n          </Stack>\n          {services[serviceName]?.expose?.map((port, index) => (\n            <VariableWrapper updatePage={updatePage} key={index}>\n              <FieldWrapper>\n                <Field\n                  name={`sdl.services.${serviceName}.expose.${index}.port`}\n                  validate={(value: number) => validatePort(value, 'port')}\n                >\n                  {({ field, meta }: any) => (\n                    <React.Fragment>\n                      <Input type=\"number\" {...field} error={meta?.error} />\n                      {meta?.error && <ErrorMessageComponent>{meta?.error}</ErrorMessageComponent>}\n                    </React.Fragment>\n                  )}\n                </Field>\n              </FieldWrapper>\n              <FieldWrapper>\n                <Field\n                  name={`sdl.services.${serviceName}.expose.${index}.as`}\n                  validate={(value: number) => validatePort(value, 'as')}\n                >\n                  {({ field, meta }: any) => (\n                    <React.Fragment>\n                      <Input type=\"number\" {...field} error={meta?.error} />\n                      {meta?.error && <ErrorMessageComponent>{meta?.error}</ErrorMessageComponent>}\n                    </React.Fragment>\n                  )}\n                </Field>\n              </FieldWrapper>\n\n              <FieldWrapper>\n                <Field name={`sdl.services.${serviceName}.expose.${index}.accept.[0]`}>\n                  {({ field }: any) => <Input {...field} value={field.value ?? ''} />}\n                </Field>\n              </FieldWrapper>\n\n              <FieldWrapper>\n                <HostFiledWithButton>\n                  {services[serviceName].expose[index].to?.map((expose, i) => {\n                    return (\n                      expose?.global && (\n                        <FieldWrapper key={`sdl.services.${serviceName}`}>\n                          <Field\n                            name={`sdl.services.${serviceName}.expose.${index}.to.${i}.global`}\n                          >\n                            {({ field }: any) => (\n                              <FormControl fullWidth style={{ background: 'white' }}>\n                                <Select\n                                  labelId=\"to-id\"\n                                  {...field}\n                                  MenuProps={{\n                                    PaperProps: {\n                                      sx: {\n                                        '& .MuiList-root': {\n                                          padding: '4px',\n                                        },\n                                      },\n                                    },\n                                  }}\n                                  SelectDisplayProps={{\n                                    style: {\n                                      padding: '11.5px 14px',\n                                    },\n                                  }}\n                                >\n                                  <MenuItem value=\"true\">\n                                    <span>true</span>\n                                  </MenuItem>\n                                  <MenuItem value=\"false\">\n                                    <span>false</span>\n                                  </MenuItem>\n                                </Select>\n                              </FormControl>\n                            )}\n                          </Field>\n                        </FieldWrapper>\n                      )\n                    );\n                  })}\n\n                  <IconButton\n                    sx={{\n                      background: '#FFFFFF',\n                      border: '1px solid #D1D5DB',\n                      boxShadow: '0px 1px 2px rgb(0 0 0 / 5%)',\n                      borderRadius: '6px',\n                      width: '46px',\n                      height: '46px',\n                    }}\n                    onClick={() => arrayHelpers.remove(index)}\n                    aria-label=\"Delete port\"\n                  >\n                    <TrashIcon />\n                  </IconButton>\n                </HostFiledWithButton>\n              </FieldWrapper>\n            </VariableWrapper>\n          ))}\n          <AddNewButtonWrapper>\n            <AddNewButton\n              startIcon={<PlusSign />}\n              variant=\"outlined\"\n              size=\"small\"\n              onClick={() =>\n                arrayHelpers.insert(services[serviceName]?.expose?.length + 1 ?? 0, {\n                  port: 3000,\n                  as: 80,\n                  to: [{ global: true }],\n                })\n              }\n            >\n              Add New Port\n            </AddNewButton>\n          </AddNewButtonWrapper>\n        </SdlSectionWrapper>\n      )}\n    />\n  );\n};\n\nconst HostFiledWithButton = styled.div`\n  display: flex;\n  column-gap: 10px;\n`;","import { Field, FieldArray } from 'formik';\nimport { IconButton } from '@mui/material';\nimport React from 'react';\nimport PlusIcon from '../../assets/images/plus-icon.svg';\nimport Trash from '../../assets/images/icon-trash.svg';\nimport styled from '@emotion/styled';\nimport {\n  AddNewButton,\n  AddNewButtonWrapper,\n  Input,\n  SdlSectionWrapper,\n  VariableWrapper,\n} from './styling';\n\nconst PlusSign = () => <img src={PlusIcon} alt=\"Plus Icon\" />;\nconst TrashIcon = () => <img src={Trash} alt=\"Trash Icon\" />;\n\ntype Service = {\n  env: Array<string>;\n};\n\ntype EnvironmentVariableProps = {\n  serviceName: string;\n  services: Record<string, Service>;\n  disabled: boolean;\n};\n\nexport const EnvironmentVariable: React.FC<EnvironmentVariableProps> = ({\n  serviceName,\n  services,\n  disabled,\n}) => {\n  return (\n    <FieldArray\n      name={`sdl.services.${serviceName}.env`}\n      render={(arrayHelpers: any) => (\n        <SdlSectionWrapper>\n          {services[serviceName]?.env?.map((env, index) => (\n            <VariableWrapper key={index}>\n              <Field name={`sdl.services.${serviceName}.env.${index}`}>\n                {({ field }: { field: { value: string } }) => (\n                  <React.Fragment>\n                    <InputField\n                      disabled={disabled}\n                      value={field.value.split('=')[0]}\n                      onChange={({ currentTarget }) => {\n                        return arrayHelpers.replace(index, `${currentTarget.value}=`);\n                      }}\n                    />\n                  </React.Fragment>\n                )}\n              </Field>\n              <Field name={`sdl.services.${serviceName}.env.${index}`}>\n                {({ field }: { field: { value: string } }) => (\n                  <InputField\n                    disabled={disabled}\n                    value={field.value.split('=')[1]}\n                    onChange={({ currentTarget }) => {\n                      const name = field.value.split('=')[0];\n                      const value = currentTarget.value;\n                      return arrayHelpers.replace(index, `${name}=${value}`);\n                    }}\n                  />\n                )}\n              </Field>\n              {!disabled && (\n                <IconButton\n                  sx={{\n                    background: '#FFFFFF',\n                    border: '1px solid #D1D5DB',\n                    boxShadow: '0px 1px 2px rgb(0 0 0 / 5%)',\n                    borderRadius: '6px',\n                    width: '46px',\n                  }}\n                  onClick={() => arrayHelpers.remove(index)}\n                  aria-label=\"Delete environment variable\"\n                >\n                  <TrashIcon />\n                </IconButton>\n              )}\n            </VariableWrapper>\n          ))}\n          {!disabled && (\n            <AddNewButtonWrapper>\n              <AddNewButton\n                startIcon={<PlusSign />}\n                variant=\"outlined\"\n                size=\"small\"\n                onClick={() => arrayHelpers.insert(services[serviceName]?.env?.length + 1 ?? 0, '')}\n              >\n                Add New Variable\n              </AddNewButton>\n            </AddNewButtonWrapper>\n          )}\n        </SdlSectionWrapper>\n      )}\n    />\n  );\n};\n\nconst InputField = styled(Input)`\n  width: 100%;\n  &:disabled {\n    background-color: #d7d7d73d;\n    pointer-events: none;\n  }\n`;\n","import { Field } from 'formik';\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport { ErrorMessageComponent } from '../ErrorMessage';\nimport { FieldWrapper, Input } from './styling';\n\nconst validateImage = (value: any) => {\n  let error;\n  if (!value) {\n    error = 'Image can\"t be empty, you have to add app image to make deployment work';\n  }\n  return error;\n};\n\ntype ImageProps = {\n  currentProfile: string;\n};\n\nexport const Image: React.FC<ImageProps> = ({ currentProfile }) => {\n  return (\n    <Field name={`sdl.services.${currentProfile}.image`} validate={validateImage} id=\"image\">\n      {({ field, meta }: any) => (\n        <FieldWrapperImage>\n          <InputField error={meta?.error} type=\"text\" {...field} />\n          {meta?.error && <ErrorMessageComponent>{meta?.error}</ErrorMessageComponent>}\n        </FieldWrapperImage>\n      )}\n    </Field>\n  );\n};\n\nconst FieldWrapperImage = styled(FieldWrapper)`\n  display: flex;\n  align-items: start;\n  flex-direction: column;\n`;\n\nconst InputField = styled(Input)<{ error?: boolean }>`\n  width: 100%;\n\n  &:focus {\n    border-color: red;\n    outline: 0 none;\n  }\n`;\n","import { Field, FieldArray } from 'formik';\nimport { Stack, Grid } from '@mui/material';\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport {\n  Input,\n  SdlSectionWrapper,\n} from './styling';\n\nimport InfoIcon from '@mui/icons-material/Info';\nimport Tooltip from '@mui/material/Tooltip';\n\ntype NextCaseValues = 'error' | 'timeout' | '403' | '404' | '429' | '500' | '502' | '503' | '504' | 'off';\n\ntype HttpOptionsValues = {\n  max_body_size?: number;\n  read_timeout?: number;\n  send_timeout?: number;\n  next_cases?: Array<NextCaseValues>;\n  next_tries?: number;\n  next_timeout?: number;\n};\n\ntype Service = {\n  expose: {\n    http_options?: HttpOptionsValues;\n  }\n};\n\ntype EnvironmentVariableProps = {\n  serviceName: string;\n  services: Record<string, Service>;\n  disabled: boolean;\n};\n\nconst httpOptions: Array<\n  [keyof HttpOptionsValues, string, string, HttpOptionsValues[keyof HttpOptionsValues]]\n> = [\n    [\n      'max_body_size',\n      'Max Body Size',\n      'Sets the maximum size of an individual HTTP request body',\n      1048576,\n    ],\n    [\n      'read_timeout',\n      'Read Timeout',\n      'Duration the proxy will wait for a response from the service',\n      60000,\n    ],\n    [\n      'send_timeout',\n      'Send Timeout',\n      'Duration the proxy will wait for the service to accept a request',\n      60000,\n    ],\n    [\n      'next_tries',\n      'Next Tries',\n      'Number of attempts the proxy will attempt another replica',\n      3,\n    ],\n    [\n      'next_timeout',\n      'Next Timeout',\n      'Duration the proxy will wait for a response from the service',\n      0,\n    ],\n    // TODO: needs a special component for next cases since it's not a simple string or number.\n    // [\n    //   'next_cases',\n    //   'Next Cases',\n    //   'Defines the cases where the proxy will try another replica in the service.  Reference the upcoming “Next Cases Attribute Usage” section for details pertaining to allowed values.',\n    //   ['error', 'timeout']\n    // ],\n  ];\n\n\nexport const HttpOptions: React.FC<EnvironmentVariableProps> = ({\n  serviceName,\n  disabled,\n}) => {\n\n  return (\n    <FieldArray\n      name={`sdl.services.${serviceName}.expose`}\n      render={() => (\n        <SdlSectionWrapper>\n          <Stack gap=\"10px\" direction={'column'}>\n            {httpOptions.map(([key, label, description, defaultValue]) => (\n              <Grid container key={key}>\n                {/* label */}\n                <Grid item xs={6}>\n                  <label htmlFor={key}>{label}</label>\n                  <Tooltip\n                    title={description}\n                    placement=\"right\"\n                    sx={{\n                      fontSize: '25px',\n                      color: 'rgb(207, 205, 204)',\n                      padding: '4px',\n                      borderRadius: '4px',\n                    }}\n                  >\n                    <InfoIcon />\n                  </Tooltip>\n                </Grid>\n\n                {/* input */}\n                <Grid item xs={6}>\n                  <Field\n                    name={`sdl.services.${serviceName}.expose[0].http_options.${key}`}\n                    id={`sdl.services.${serviceName}.expose[0].http_options.${key}`}\n                    type=\"number\"\n                    placeholder={defaultValue?.toString()}\n                    as={InputField}\n                    disabled={disabled}\n                  />\n                </Grid>\n              </Grid>\n            ))}\n          </Stack>\n        </SdlSectionWrapper>\n      )}\n    />\n  );\n};\n\nconst InputField = styled(Input)`\n    width: 100%;\n\n    &:disabled {\n      background - color: #d7d7d73d;\n    pointer-events: none;\n  }`;\n","import React from 'react';\nimport {\n  Accordion,\n  accordionClasses,\n  AccordionDetails,\n  AccordionSummary,\n  Box,\n  Card,\n  CardContent,\n  LinearProgress,\n  Slide,\n  Stack,\n  Typography,\n} from '@mui/material';\nimport { Field } from 'formik';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { capitalize } from 'lodash';\nimport { Pricing } from './Pricing';\nimport { Cpu } from './Cpu';\nimport { Memory } from './Memory';\nimport { Storage } from './Storage';\nimport { Ports } from './Ports';\nimport { EnvironmentVariable } from './EnvironmentVariable';\nimport { SdlEditor } from './SdllEditor';\nimport styled from '@emotion/styled';\nimport { Image } from './Image';\nimport { SdlConfigurationType } from './settings';\nimport { FieldWrapper, Input, Label, LabelTitle } from './styling';\nimport InfoIcon from '@mui/icons-material/Info';\nimport Tooltip from '@mui/material/Tooltip';\nimport { HttpOptions } from './HttpOptions';\nimport { useRpcNode } from '../../hooks/useRpcNode';\nimport { Gpu } from './Gpu';\n\ninterface SdlConfigurationProps {\n  actionItems?: () => React.ReactNode;\n  sdl: any;\n  reviewSdl: boolean;\n  closeReviewModal: () => void;\n  configurationType: SdlConfigurationType;\n  progressVisible?: boolean;\n  cardMessage?: string | undefined;\n  onSave: (sdl: any) => void;\n}\n\nexport const SdlConfiguration: React.FC<SdlConfigurationProps> = ({\n  actionItems,\n  sdl,\n  reviewSdl,\n  closeReviewModal,\n  configurationType,\n  progressVisible,\n  cardMessage,\n  onSave,\n}) => {\n  const [getRpcNode] = useRpcNode();\n  const forbidEditing = configurationType === SdlConfigurationType.Update;\n  const hasGPU = getRpcNode().networkType === 'testnet';\n\n  // hide the GPU section for now\n  const showGpu = false;\n\n  return (\n    <React.Fragment>\n      {progressVisible && (\n        <Box sx={{ minWidth: 600 }}>\n          <Card>\n            <CardContent\n              style={{\n                textAlign: 'center',\n                marginTop: '100px',\n                marginBottom: '100px',\n              }}\n            >\n              <Slide direction=\"up\" in={progressVisible} unmountOnExit>\n                <Stack sx={{ width: '100%', color: 'grey.700' }} spacing={2}>\n                  <Typography variant=\"h3\">{cardMessage}</Typography>\n                  <LinearProgress />\n                </Stack>\n              </Slide>\n            </CardContent>\n          </Card>\n        </Box>\n      )}\n      {!progressVisible && (\n        <SdlConfigurationWrapper>\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            gap={2}\n            sx={{\n              '& .MuiTextField-root': { m: 1, width: '25ch' },\n              margin: '0 auto',\n              width: '821px',\n            }}\n          >\n            <DeploymentFormWrapper>\n              <FieldWrapper>\n                <Label htmlFor=\"appName\">\n                  <LabelTitle>Name Your App</LabelTitle>\n                </Label>\n                <Field name=\"appName\" id=\"appName\">\n                  {({ field }: any) => (\n                    <InputField\n                      {...field}\n                      className=\"mt-2\"\n                      disabled={forbidEditing}\n                      placeholder=\"Optional. We will auto-generate one for you, if you don't provide a name.\"\n                    />\n                  )}\n                </Field>\n              </FieldWrapper>\n            </DeploymentFormWrapper>\n\n            <div>\n              <ToolTipTitleWrapper>\n                <ConfigurationTitle>Configure services</ConfigurationTitle>\n                <Tooltip\n                  title=\"This is where you can specify various parameters (one per service) that make up your SDL file. The number and name of the services will vary depending on the application/ SDL\"\n                  placement=\"right\"\n                  sx={{\n                    fontSize: '25px',\n                    color: 'rgb(207, 205, 204)',\n                    padding: '4px',\n                    borderRadius: '4px',\n                  }}\n                >\n                  <InfoIcon />\n                </Tooltip>\n              </ToolTipTitleWrapper>\n              {sdl.deployment &&\n                Object.keys(sdl.deployment)?.map((serviceName, index) => {\n                  const placement = Object.keys(sdl.deployment[serviceName])[0];\n                  const profile = sdl.deployment[serviceName][placement].profile;\n                  const { profiles, services } = sdl;\n\n                  // Initialize the GPU resource if it doesn't exist\n                  if (hasGPU && profiles.compute[profile]?.resources.gpu === undefined) {\n                    profiles.compute[profile].resources.gpu = {\n                      units: 0,\n                    };\n                  }\n\n                  return (\n                    <AppAccordion key={serviceName} className=\"p-2\">\n                      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                        <Typography>{capitalize(serviceName)}</Typography>\n                      </AccordionSummary>\n                      <AccordionDetails>\n                        <div\n                          style={{\n                            gap: '10px',\n                            display: 'flex',\n                            flexDirection: 'column',\n                          }}\n                        >\n                          <h1 className=\"font-medium \">Image</h1>\n                          <Image currentProfile={serviceName} />\n\n                          <ToolTipTitleWrapper>\n                            <ConfigurationTitle>Pricing</ConfigurationTitle>\n                            <Tooltip\n                              title=\"The value you specify here is the maximum you would like to pay for the compute resources you are requesting for this service. uakt allows you to specify an amount that is a fraction of 1AKT\"\n                              placement=\"right\"\n                              sx={{\n                                fontSize: '25px',\n                                color: 'rgb(207, 205, 204)',\n                                padding: '4px',\n                                borderRadius: '4px',\n                              }}\n                            >\n                              <InfoIcon />\n                            </Tooltip>\n                          </ToolTipTitleWrapper>\n                          <Pricing\n                            profiles={profiles}\n                            currentProfile={profile}\n                            placement={placement}\n                            disabled={forbidEditing}\n                          />\n\n                          <ToolTipTitleWrapper>\n                            <ConfigurationTitle>Resources</ConfigurationTitle>\n                            <Tooltip\n                              title=\"This is where you specify how much CPU, memory and storage you would like to lease from the provider, to host your application.\"\n                              placement=\"right\"\n                              sx={{\n                                fontSize: '25px',\n                                color: 'rgb(207, 205, 204)',\n                                padding: '4px',\n                                borderRadius: '4px',\n                              }}\n                            >\n                              <InfoIcon />\n                            </Tooltip>\n                          </ToolTipTitleWrapper>\n                          <Cpu currentProfile={profile} disabled={forbidEditing} />\n                          <Memory currentProfile={profile} disabled={forbidEditing} />\n                          <Storage\n                            serviceName={serviceName}\n                            profiles={profiles}\n                            currentProfile={profile}\n                            disabled={forbidEditing}\n                          />\n\n                          {hasGPU && showGpu && <Gpu currentProfile={profile} disabled={forbidEditing} />}\n\n                          <h1 className=\"font-medium\">Ports</h1>\n                          <Ports serviceName={serviceName} services={services} />\n\n                          <h1 className=\"font-medium\">Environment Variables</h1>\n                          <EnvironmentVariable\n                            serviceName={serviceName}\n                            services={services}\n                            disabled={forbidEditing}\n                          />\n\n                          <h1 className='font-medium'>HTTP Options</h1>\n                          <HttpOptions\n                            serviceName={serviceName}\n                            services={services}\n                            disabled={forbidEditing}\n                          />\n\n                        </div>\n                        <SdlEditor\n                          reviewSdl={reviewSdl}\n                          closeReviewModal={closeReviewModal}\n                          disabled={forbidEditing}\n                          onSave={onSave} // Pass the onSave prop\n                        />\n                      </AccordionDetails>\n                    </AppAccordion>\n                  );\n                })}\n            </div>\n            {actionItems && actionItems()}\n          </Box>\n        </SdlConfigurationWrapper>\n      )}\n    </React.Fragment>\n  );\n};\n\nconst SdlConfigurationWrapper = styled.div`\n  gap: 20px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst DeploymentFormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 24px;\n  gap: 20px;\n\n  background: #ffffff;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.06);\n  border-radius: 8px;\n`;\n\nconst InputField = styled(Input)`\n  border: 1px solid #d7d7d7;\n  width: 100%;\n\n  &:disabled {\n    background-color: #d7d7d73d;\n    pointer-events: none;\n  }\n`;\n\nconst AppAccordion = styled(Accordion)`\n  box-shadow: none;\n\n  & .${accordionClasses.expanded} {\n    border-bottom: none;\n    background: #f9fafb;\n  }\n\n  & .${accordionClasses.region} {\n    background: #f9fafb;\n  }\n\n  &:last-of-type {\n    border-radius: 0 0 8px 8px;\n  }\n\n  &:before {\n    background-color: initial;\n  }\n`;\n\nconst ConfigurationTitle = styled.h1`\n  font-size: 17px;\n  font-weight: bold;\n  border-radius: 8px 8px 0 0;\n`;\n\nconst ToolTipTitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 24px;\n  background: white;\n  font-weight: bold;\n  border-radius: 8px 8px 0 0;\n`;\n"],"names":["ErrorMessageComponent","styled","span","_templateObject","_taggedTemplateLiteral","validatePricing","value","error","Pricing","_ref","profiles","placement","currentProfile","disabled","_jsx","Field","name","concat","validate","id","children","_ref2","_profiles$placement$p","field","meta","_jsxs","React","FieldWrapperAmountCurrency","FieldAmountCurrency","pricing","denom","InputField","_objectSpread","style","borderStartStartRadius","borderEndStartRadius","type","FieldWrapper","div","_templateObject2","Input","_templateObject3","InputNumber","_ref3","setFieldValue","_objectWithoutProperties","_excluded","size","Number","withOutSuffix","slice","parseFloat","suffix","NumberInputWrapper","InputWithSuffix","NumberInput","min","step","onChange","_ref4","currentTarget","InputSuffix","NumberButtonWrapper","InputIconUp","onClick","isNumberAnExponent","withPowerOfTwo","isNumberWithSmallStep","smallIncrement","exponent","Math","log2","pow","toFixed","InputIconDown","input","_templateObject4","_templateObject5","height","cursor","src","IconTop","alt","_templateObject6","IconDown","_templateObject7","MeasurementControl","title","subTitle","MeasurementWrapper","className","MeasurementTitle","MeasurementSubTitle","p","props","validateCpu","Cpu","form","validateMemory","startsWith","Memory","validateStorage","intValue","parseInt","isNaN","validateStorageData","Storage","serviceName","_React$useState","_React$useState2","_slicedToArray","setValue","SdlSectionWrapper","StorageType","Tabs","variant","event","newValue","sx","marginBottom","borderBottom","Tab","textTransform","label","a11yProps","TabPanel","index","FieldArray","render","arrayHelpers","_profiles$compute$cur","storages","compute","resources","storage","_Fragment","map","attributes","display","columnGap","paddingBottom","Tooltip","length","IconButton","background","border","boxShadow","borderRadius","width","remove","TrashIcon","AddNewButtonWrapper","AddNewButton","startIcon","PlusSign","_profiles$compute$cur2","_profiles$compute$cur3","insert","Stack","spacing","direction","TableTitle","_profiles$compute$cur4","_profiles$compute$cur5","_ref5","_ref6","_ref7","FormControl","fullWidth","backgroundColor","pointerEvents","Select","labelId","SelectDisplayProps","padding","MenuItem","_sdl$services$service","_sdl$services$service2","sdl","values","storageParams","services","params","Object","keys","_i","_Object$keys","key","_sdl$services$service3","_sdl$services$service4","_ref8","_profiles$compute$cur6","_profiles$compute$cur7","undefined","persistent","class","other","role","hidden","PlusIcon","Trash","validatePort","toUpperCase","Ports","_ref$updatePage","updatePage","_services$serviceName","_services$serviceName2","expose","port","_services$serviceName3","VariableWrapper","_field$value","HostFiledWithButton","to","i","global","MenuProps","PaperProps","_services$serviceName4","_services$serviceName5","as","EnvironmentVariable","env","split","replace","validateImage","Image","FieldWrapperImage","httpOptions","HttpOptions","gap","description","defaultValue","Grid","container","item","xs","htmlFor","fontSize","color","InfoIcon","placeholder","toString","SdlConfiguration","actionItems","reviewSdl","closeReviewModal","configurationType","progressVisible","cardMessage","onSave","_useRpcNode","useRpcNode","getRpcNode","forbidEditing","SdlConfigurationType","Update","hasGPU","networkType","Box","minWidth","Card","CardContent","textAlign","marginTop","Slide","in","unmountOnExit","Typography","LinearProgress","SdlConfigurationWrapper","flexDirection","m","margin","DeploymentFormWrapper","Label","LabelTitle","ToolTipTitleWrapper","ConfigurationTitle","deployment","_profiles$compute$pro","profile","gpu","units","AppAccordion","AccordionSummary","expandIcon","ExpandMoreIcon","capitalize","AccordionDetails","SdlEditor","Accordion","accordionClasses","expanded","region","h1"],"sourceRoot":""}